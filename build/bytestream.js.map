{"version":3,"sources":["../src/bytestream.js"],"names":["ByteStream","constructor","parameters","clear","Object","keys","key","length","i","_view","stub","fromUint8Array","view","fromArrayBuffer","buffer","fromString","string","fromHexString","hexstring","value","_buffer","slice","Uint8Array","ArrayBuffer","set","byteLength","array","stringLength","charCodeAt","toString","start","result","String","fromCharCode","hexString","hexMap","Map","j","temp","get","charAt","toHexString","str","toUpperCase","copy","Error","stream","end","realloc","size","append","initialSize","streamViewLength","copyView","insert","isEqual","isEqualView","findPattern","pattern","backward","patternLength","patternArray","push","equal","equalStart","findFirstIn","patterns","id","position","valid","findAllIn","patternFound","findAllPatternIn","Array","from","findFirstNotIn","left","right","currentLength","findAllNotIn","findFirstSequence","firstIn","skipNotPatterns","firstNotIn","skipPatterns","findAllSequences","findPairedPatterns","leftPattern","rightPattern","currentPositionLeft","leftPatterns","rightPatterns","splice","sort","a","b","findPairedArrays","inputLeftPatterns","inputRightPatterns","replacePattern","searchPattern","findAllResult","output","status","searchPatternPositions","replacePatternPositions","element","patternDifference","changedBuffer","changedView","currentPosition","k","SeqStream","_length","_start","appendBlock","prevLength","prevStart","_stream","resetPosition","gap","appendView","appendChar","char","appendUint16","number","Uint16Array","appendUint24","Uint32Array","appendUint32","getBlock","changeLength","getUint16","block","getUint24","getUint32","parseByteMap","map","elements","dataView","resultArray","elementsCount","count","mapLength","structureLength","maxlength","name","defaultValue","func","type","bitsToStringArray","BitStream","bitsCount","fromByteStream","byteStream","fromUint32","uint32","byteIndex","shiftRight","join","shift","needShrink","shiftMask","shrink","shiftLeft","bitsOffset","valueShift","startIndex","startOffset","endIndex","endOffset","bitsLength","reverseBytes","reverseValue","initialValue","initialValueLength","reversedValue","getNumberValue","stringStream","stringPattern","stringPatterns","stringLeftPattern","stringRightPattern","stringLeftPatterns","stringRightPatterns","stringSearchPattern","stringReplacePattern","SeqBitStream","getBits","getBitsString","bitsLengthIndex","getBitsReversedValue","initialOffset","valueView","streamToDisplay"],"mappings":"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","sourcesContent":["/*\r\n * Copyright (c) 2016-2018, Peculiar Ventures\r\n * All rights reserved.\r\n *\r\n * Author 2016-2018, Yury Strozhevsky <www.strozhevsky.com>.\r\n *\r\n * THIS IS A PRIVATE SOURCE CODE AND ANY DISTRIBUTION OR COPYING IS PROHIBITED.\r\n *\r\n */\r\n//**************************************************************************************\r\nexport class ByteStream\r\n{\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleLoopsJS\r\n\t/**\r\n\t * Constructor for ByteStream class\r\n\t * @param {{[length]: number, [stub]: number, [view]: Uint8Array, [buffer]: ArrayBuffer, [string]: string, [hexstring]: string}} parameters\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tthis.clear();\r\n\t\t\r\n\t\tfor(const key of Object.keys(parameters))\r\n\t\t{\r\n\t\t\tswitch(key)\r\n\t\t\t{\r\n\t\t\t\tcase \"length\":\r\n\t\t\t\t\tthis.length = parameters.length;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"stub\":\r\n\t\t\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\t\t\tfor(let i = 0; i < this._view.length; i++)\r\n\t\t\t\t\t\tthis._view[i] = parameters.stub;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"view\":\r\n\t\t\t\t\tthis.fromUint8Array(parameters.view);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"buffer\":\r\n\t\t\t\t\tthis.fromArrayBuffer(parameters.buffer);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\t\tthis.fromString(parameters.string);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"hexstring\":\r\n\t\t\t\t\tthis.fromHexString(parameters.hexstring);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Setter for \"buffer\"\r\n\t * @param {ArrayBuffer} value\r\n\t */\r\n\tset buffer(value)\r\n\t{\r\n\t\tthis._buffer = value.slice(0);\r\n\t\tthis._view = new Uint8Array(this._buffer);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Getter for \"buffer\"\r\n\t * @returns {ArrayBuffer}\r\n\t */\r\n\tget buffer()\r\n\t{\r\n\t\treturn this._buffer;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Setter for \"view\"\r\n\t * @param {Uint8Array} value\r\n\t */\r\n\tset view(value)\r\n\t{\r\n\t\tthis._buffer = new ArrayBuffer(value.length);\r\n\t\tthis._view = new Uint8Array(this._buffer);\r\n\t\t\r\n\t\tthis._view.set(value);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Getter for \"view\"\r\n\t * @returns {Uint8Array}\r\n\t */\r\n\tget view()\r\n\t{\r\n\t\treturn this._view;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Getter for \"length\"\r\n\t * @returns {number}\r\n\t */\r\n\tget length()\r\n\t{\r\n\t\treturn this._buffer.byteLength;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Setter for \"length\"\r\n\t * @param {number} value\r\n\t */\r\n\tset length(value)\r\n\t{\r\n\t\tthis._buffer = new ArrayBuffer(value);\r\n\t\tthis._view = new Uint8Array(this._buffer);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Clear existing stream\r\n\t */\r\n\tclear()\r\n\t{\r\n\t\tthis._buffer = new ArrayBuffer(0);\r\n\t\tthis._view = new Uint8Array(this._buffer);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Initialize \"Stream\" object from existing \"ArrayBuffer\"\r\n\t * @param {!ArrayBuffer} array The ArrayBuffer to copy from\r\n\t */\r\n\tfromArrayBuffer(array)\r\n\t{\r\n\t\tthis.buffer = array;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionNamingConventionJS\r\n\t/**\r\n\t * Initialize \"Stream\" object from existing \"Uint8Array\"\r\n\t * @param {!Uint8Array} array The Uint8Array to copy from\r\n\t */\r\n\tfromUint8Array(array)\r\n\t{\r\n\t\tthis._buffer = new ArrayBuffer(array.length);\r\n\t\tthis._view = new Uint8Array(this._buffer);\r\n\t\t\r\n\t\tthis._view.set(array);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Initialize \"Stream\" object from existing string\r\n\t * @param {string} string The string to initialize from\r\n\t */\r\n\tfromString(string)\r\n\t{\r\n\t\tconst stringLength = string.length;\r\n\t\t\r\n\t\tthis.length = stringLength;\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tfor(let i = 0; i < stringLength; i++)\r\n\t\t\tthis.view[i] = string.charCodeAt(i);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Represent \"Stream\" object content as a string\r\n\t * @param {number} [start] Start position to convert to string\r\n\t * @param {number} [length] Length of array to convert to string\r\n\t * @returns {string}\r\n\t */\r\n\ttoString(start = 0, length = (this.view.length - start))\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tlet result = \"\";\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check input parameters\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif((start >= this.view.length) || (start < 0))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif((length >= this.view.length) || (length < 0))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.view.length - start;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Convert array of bytes to string\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tfor(let i = start; i < (start + length); i++)\r\n\t\t\tresult += String.fromCharCode(this.view[i]);\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionTooLongJS\r\n\t/**\r\n\t * Initialize \"Stream\" object from existing hexdecimal string\r\n\t * @param {string} hexString String to initialize from\r\n\t */\r\n\tfromHexString(hexString)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tconst stringLength = hexString.length;\r\n\t\t\r\n\t\tthis.buffer = new ArrayBuffer(stringLength >> 1);\r\n\t\tthis.view = new Uint8Array(this.buffer);\r\n\t\t\r\n\t\tconst hexMap = new Map();\r\n\t\t\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"0\", 0x00);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"1\", 0x01);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"2\", 0x02);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"3\", 0x03);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"4\", 0x04);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"5\", 0x05);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"6\", 0x06);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"7\", 0x07);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"8\", 0x08);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"9\", 0x09);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"A\", 0x0A);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"a\", 0x0A);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"B\", 0x0B);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"b\", 0x0B);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"C\", 0x0C);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"c\", 0x0C);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"D\", 0x0D);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"d\", 0x0D);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"E\", 0x0E);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"e\", 0x0E);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"F\", 0x0F);\r\n\t\t// noinspection MagicNumberJS\r\n\t\thexMap.set(\"f\", 0x0F);\r\n\t\t\r\n\t\tlet j = 0;\r\n\t\t// noinspection MagicNumberJS\r\n\t\tlet temp = 0x00;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Convert char-by-char\r\n\t\tfor(let i = 0; i < stringLength; i++)\r\n\t\t{\r\n\t\t\t// noinspection NegatedIfStatementJS\r\n\t\t\tif(!(i % 2))\r\n\t\t\t{\r\n\t\t\t\t// noinspection NestedFunctionCallJS\r\n\t\t\t\ttemp = hexMap.get(hexString.charAt(i)) << 4;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t// noinspection NestedFunctionCallJS\r\n\t\t\t\ttemp |= hexMap.get(hexString.charAt(i));\r\n\t\t\t\t\r\n\t\t\t\tthis.view[j] = temp;\r\n\t\t\t\tj++;\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Represent \"Stream\" object content as a hexdecimal string\r\n\t * @param {number} [start=0] Start position to convert to string\r\n\t * @param {number} [length=(this.view.length - start)] Length of array to convert to string\r\n\t * @returns {string}\r\n\t */\r\n\ttoHexString(start = 0, length = (this.view.length - start))\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tlet result = \"\";\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check input parameters\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif((start >= this.view.length) || (start < 0))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif((length >= this.view.length) || (length < 0))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.view.length - start;\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\tfor(let i = start; i < (start + length); i++)\r\n\t\t{\r\n\t\t\t// noinspection ChainedFunctionCallJS\r\n\t\t\tconst str = this.view[i].toString(16).toUpperCase();\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, ConditionalExpressionJS, EqualityComparisonWithCoercionJS\r\n\t\t\tresult = result + ((str.length == 1) ? \"0\" : \"\") + str;\r\n\t\t}\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Return copy of existing \"Stream\"\r\n\t * @param {number} [start=0] Start position of the copy\r\n\t * @param {number} [length=this.view.length] Length of the copy\r\n\t * @returns {ByteStream}\r\n\t */\r\n\tcopy(start = 0, length = (this._buffer.byteLength - start))\r\n\t{\r\n\t\t//region Check input parameters\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif((start === 0) && (this._buffer.byteLength === 0))\r\n\t\t\treturn new ByteStream();\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif((start < 0) || (start > (this._buffer.byteLength - 1)))\r\n\t\t\tthrow new Error(`Wrong start position: ${start}`);\r\n\t\t//endregion\r\n\t\t\r\n\t\tconst stream = new ByteStream();\r\n\t\t\r\n\t\tstream._buffer = this._buffer.slice(start, start + length);\r\n\t\tstream._view = new Uint8Array(stream._buffer);\r\n\t\t\r\n\t\treturn stream;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Return slice of existing \"Stream\"\r\n\t * @param {number} [start=0] Start position of the slice\r\n\t * @param {number} [end=this._buffer.byteLength] End position of the slice\r\n\t * @returns {ByteStream}\r\n\t */\r\n\tslice(start = 0, end = this._buffer.byteLength)\r\n\t{\r\n\t\t//region Check input parameters\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif((start === 0) && (this._buffer.byteLength === 0))\r\n\t\t\treturn new ByteStream();\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif((start < 0) || (start > (this._buffer.byteLength - 1)))\r\n\t\t\tthrow new Error(`Wrong start position: ${start}`);\r\n\t\t//endregion\r\n\t\t\r\n\t\tconst stream = new ByteStream();\r\n\t\t\r\n\t\tstream._buffer = this._buffer.slice(start, end);\r\n\t\tstream._view = new Uint8Array(stream._buffer);\r\n\t\t\r\n\t\treturn stream;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Change size of existing \"Stream\"\r\n\t * @param {!number} size Size for new \"Stream\"\r\n\t */\r\n\trealloc(size)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tconst buffer = new ArrayBuffer(size);\r\n\t\tconst view = new Uint8Array(buffer);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Create a new ArrayBuffer content\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(size > this._view.length)\r\n\t\t\tview.set(this._view);\r\n\t\telse\r\n\t\t{\r\n\t\t\t// noinspection NestedFunctionCallJS\r\n\t\t\tview.set(new Uint8Array(this._buffer, 0, size));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Initialize \"Stream\" with new \"ArrayBuffer\"\r\n\t\tthis._buffer = buffer.slice(0);\r\n\t\tthis._view = new Uint8Array(this._buffer);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Append a new \"Stream\" content to the current \"Stream\"\r\n\t * @param {ByteStream} stream A new \"stream\" to append to current \"stream\"\r\n\t */\r\n\tappend(stream)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tconst initialSize = this._buffer.byteLength;\r\n\t\tconst streamViewLength = stream._buffer.byteLength;\r\n\t\t\r\n\t\tconst copyView = stream._view.slice();\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Re-allocate current internal buffer\r\n\t\tthis.realloc(initialSize + streamViewLength);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Copy input stream content to a new place\r\n\t\tthis._view.set(copyView, initialSize);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Insert \"Stream\" content to the current \"Stream\" at specific position\r\n\t * @param {ByteStream} stream A new \"stream\" to insert to current \"stream\"\r\n\t * @param {number} [start=0] Start position to insert to\r\n\t * @param {number} [length]\r\n\t * @returns {boolean}\r\n\t */\r\n\tinsert(stream, start = 0, length = (this._buffer.byteLength - start))\r\n\t{\r\n\t\t//region Initial variables\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(start > (this._buffer.byteLength - 1))\r\n\t\t\treturn false;\r\n\t\t\r\n\t\tif(length > (this._buffer.byteLength - start))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this._buffer.byteLength - start;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check input variables\r\n\t\tif(length > stream._buffer.byteLength)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = stream._buffer.byteLength;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Update content of the current stream\r\n\t\t// noinspection NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\tif(length == stream._buffer.byteLength)\r\n\t\t\tthis._view.set(stream._view, start);\r\n\t\telse\r\n\t\t{\r\n\t\t\t// noinspection NestedFunctionCallJS\r\n\t\t\tthis._view.set(stream._view.slice(0, length), start);\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Check that two \"Stream\" objects has equal content\r\n\t * @param {ByteStream} stream Stream to compare with\r\n\t * @returns {boolean}\r\n\t */\r\n\tisEqual(stream)\r\n\t{\r\n\t\t//region Check length of both buffers\r\n\t\t// noinspection NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\tif(this._buffer.byteLength != stream._buffer.byteLength)\r\n\t\t\treturn false;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Compare each byte of both buffers\r\n\t\tfor(let i = 0; i < stream._buffer.byteLength; i++)\r\n\t\t{\r\n\t\t\t// noinspection NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\t\tif(this.view[i] != stream.view[i])\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Check that current \"Stream\" objects has equal content with input \"Uint8Array\"\r\n\t * @param {Uint8Array} view View to compare with\r\n\t * @returns {boolean}\r\n\t */\r\n\tisEqualView(view)\r\n\t{\r\n\t\t//region Check length of both buffers\r\n\t\t// noinspection NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\tif(view.length != this.view.length)\r\n\t\t\treturn false;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Compare each byte of both buffers\r\n\t\tfor(let i = 0; i < view.length; i++)\r\n\t\t{\r\n\t\t\t// noinspection NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\t\tif(this.view[i] != view[i])\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleLoopsJS, FunctionWithMultipleReturnPointsJS, OverlyComplexFunctionJS, FunctionTooLongJS\r\n\t/**\r\n\t * Find any byte pattern in \"Stream\"\r\n\t * @param {ByteStream} pattern Stream having pattern value\r\n\t * @param {?number} [start] Start position to search from\r\n\t * @param {?number} [length] Length of byte block to search at\r\n\t * @param {boolean} [backward] Flag to search in backward order\r\n\t * @returns {number}\r\n\t */\r\n\tfindPattern(pattern, start = null, length = null, backward = false)\r\n\t{\r\n\t\t//region Check input variables\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(start == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS, ConditionalExpressionJS\r\n\t\t\tstart = (backward) ? this.buffer.byteLength : 0;\r\n\t\t}\r\n\t\t\r\n\t\tif(start > this.buffer.byteLength)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = this.buffer.byteLength;\r\n\t\t}\r\n\t\t\r\n\t\tif(backward)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\t\tif(length == null)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = start;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(length > start)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = start;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\t\tif(length == null)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(length > (this.buffer.byteLength - start))\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Initial variables\r\n\t\tconst patternLength = pattern.buffer.byteLength;\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(patternLength > length)\r\n\t\t\treturn (-1);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Make a \"pre-read\" array for pattern\r\n\t\tconst patternArray = [];\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tfor(let i = 0; i < patternLength; i++)\r\n\t\t\tpatternArray.push(pattern.view[i]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Search for pattern\r\n\t\tfor(let i = 0; i <= (length - patternLength); i++)\r\n\t\t{\r\n\t\t\tlet equal = true;\r\n\t\t\t// noinspection ConditionalExpressionJS\r\n\t\t\tconst equalStart = (backward) ? (start - patternLength - i) : (start + i);\r\n\t\t\t\r\n\t\t\tfor(let j = 0; j < patternLength; j++)\r\n\t\t\t{\r\n\t\t\t\t// noinspection EqualityComparisonWithCoercionJS\r\n\t\t\t\tif(this.view[j + equalStart] != patternArray[j])\r\n\t\t\t\t{\r\n\t\t\t\t\tequal = false;\r\n\t\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(equal)\r\n\t\t\t{\r\n\t\t\t\t// noinspection ConditionalExpressionJS\r\n\t\t\t\treturn (backward) ? (start - patternLength - i) : (start + patternLength + i); // Position after the pattern found\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn (-1);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection OverlyComplexFunctionJS\r\n\t/**\r\n\t * Find first position of any pattern from input array\r\n\t * @param {Array.<ByteStream>} patterns Array with patterns which should be found\r\n\t * @param {?number} [start] Start position to search from\r\n\t * @param {?number} [length] Length of byte block to search at\r\n\t * @param {boolean} [backward=false] Flag to search in backward order\r\n\t * @returns {{id: number, position: number}}\r\n\t */\r\n\tfindFirstIn(patterns, start = null, length = null, backward = false)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(start == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS, ConditionalExpressionJS\r\n\t\t\tstart = (backward) ? this.buffer.byteLength : 0;\r\n\t\t}\r\n\t\t\r\n\t\tif(start > this.buffer.byteLength)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = this.buffer.byteLength;\r\n\t\t}\r\n\t\t\r\n\t\tif(backward)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\t\tif(length == null)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = start;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(length > start)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = start;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\t\tif(length == null)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(length > (this.buffer.byteLength - start))\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection ConditionalExpressionJS\r\n\t\tconst result = {\r\n\t\t\tid: (-1),\r\n\t\t\tposition: (backward) ? 0 : (start + length)\r\n\t\t};\r\n\t\t//endregion\r\n\t\t\r\n\t\tfor(let i = 0; i < patterns.length; i++)\r\n\t\t{\r\n\t\t\tconst position = this.findPattern(patterns[i], start, length, backward);\r\n\t\t\t// noinspection EqualityComparisonWithCoercionJS\r\n\t\t\tif(position != (-1))\r\n\t\t\t{\r\n\t\t\t\tlet valid = false;\r\n\t\t\t\t\r\n\t\t\t\tif(backward)\r\n\t\t\t\t{\r\n\t\t\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\t\t\tif(position >= result.position)\r\n\t\t\t\t\t\tvalid = true;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\t\t\tif(position <= result.position)\r\n\t\t\t\t\t\tvalid = true;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(valid)\r\n\t\t\t\t{\r\n\t\t\t\t\tresult.position = position;\r\n\t\t\t\t\tresult.id = i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Find all positions of any pattern from input array\r\n\t * @param {Array.<ByteStream>} patterns Array with patterns which should be found\r\n\t * @param {?number} [start] Start position to search from\r\n\t * @param {?number} [length] Length of byte block to search at\r\n\t * @returns {Array}\r\n\t */\r\n\tfindAllIn(patterns, start = 0, length = (this.buffer.byteLength - start))\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tconst result = [];\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(start == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(start > (this.buffer.byteLength - 1))\r\n\t\t\treturn result;\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(length == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t}\r\n\r\n\t\tif(length > (this.buffer.byteLength - start))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t}\r\n\t\t\r\n\t\tlet patternFound = {\r\n\t\t\tid: (-1),\r\n\t\t\tposition: start\r\n\t\t};\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Find all accurences of patterns\r\n\t\tdo\r\n\t\t{\r\n\t\t\tconst position = patternFound.position;\r\n\t\t\t\r\n\t\t\tpatternFound = this.findFirstIn(patterns, patternFound.position, length);\r\n\t\t\t\r\n\t\t\t// noinspection EqualityComparisonWithCoercionJS\r\n\t\t\tif(patternFound.id == (-1))\r\n\t\t\t{\r\n\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength -= (patternFound.position - position);\r\n\t\t\t\r\n\t\t\tresult.push({\r\n\t\t\t\tid: patternFound.id,\r\n\t\t\t\tposition: patternFound.position\r\n\t\t\t});\r\n\t\t} while(true); // eslint-disable-line\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleLoopsJS, FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Find all positions of a pattern\r\n\t * @param {ByteStream} pattern Stream having pattern value\r\n\t * @param {?number} [start] Start position to search from\r\n\t * @param {?number} [length] Length of byte block to search at\r\n\t * @returns {Array|number} Array with all pattern positions or (-1) if failed\r\n\t */\r\n\tfindAllPatternIn(pattern, start = 0, length = (this.buffer.byteLength - start))\r\n\t{\r\n\t\t//region Check input variables\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(start == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\t\r\n\t\tif(start > this.buffer.byteLength)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = this.buffer.byteLength;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(length == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t}\r\n\t\t\r\n\t\tif(length > (this.buffer.byteLength - start))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Initial variables\r\n\t\tconst result = [];\r\n\t\t\r\n\t\tconst patternLength = pattern.buffer.byteLength;\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(patternLength > length)\r\n\t\t\treturn (-1);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Make a \"pre-read\" array for pattern\r\n\t\tconst patternArray = Array.from(pattern.view);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Search for pattern\r\n\t\tfor(let i = 0; i <= (length - patternLength); i++)\r\n\t\t{\r\n\t\t\tlet equal = true;\r\n\t\t\tconst equalStart = start + i;\r\n\t\t\t\r\n\t\t\tfor(let j = 0; j < patternLength; j++)\r\n\t\t\t{\r\n\t\t\t\t// noinspection EqualityComparisonWithCoercionJS\r\n\t\t\t\tif(this.view[j + equalStart] != patternArray[j])\r\n\t\t\t\t{\r\n\t\t\t\t\tequal = false;\r\n\t\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(equal)\r\n\t\t\t{\r\n\t\t\t\tresult.push(start + patternLength + i); // Position after the pattern found\r\n\t\t\t\ti += (patternLength - 1); // On next step of \"for\" we will have \"i++\"\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection OverlyComplexFunctionJS, FunctionTooLongJS\r\n\t/**\r\n\t * Find first position of data, not included in patterns from input array\r\n\t * @param {Array.<ByteStream>} patterns Array with patterns which should be ommited\r\n\t * @param {?number} [start] Start position to search from\r\n\t * @param {?number} [length] Length of byte block to search at\r\n\t * @param {boolean} [backward=false] Flag to search in backward order\r\n\t * @returns {{left: {id: number, position: *}, right: {id: number, position: number}, value: ByteStream}}\r\n\t */\r\n\tfindFirstNotIn(patterns, start = null, length = null, backward = false)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(start == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS, ConditionalExpressionJS\r\n\t\t\tstart = (backward) ? this.buffer.byteLength : 0;\r\n\t\t}\r\n\t\t\r\n\t\tif(start > this.buffer.byteLength)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = this.buffer.byteLength;\r\n\t\t}\r\n\t\t\r\n\t\tif(backward)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\t\tif(length == null)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = start;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(length > start)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = start;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\t\tif(length == null)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(length > (this.buffer.byteLength - start))\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tconst result = {\r\n\t\t\tleft: {\r\n\t\t\t\tid: (-1),\r\n\t\t\t\tposition: start\r\n\t\t\t},\r\n\t\t\tright: {\r\n\t\t\t\tid: (-1),\r\n\t\t\t\tposition: 0\r\n\t\t\t},\r\n\t\t\tvalue: new ByteStream()\r\n\t\t};\r\n\t\t\r\n\t\tlet currentLength = length;\r\n\t\t//endregion\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\twhile(currentLength > 0)\r\n\t\t{\r\n\t\t\t//region Search for nearest \"pattern\"\r\n\t\t\t// noinspection ConditionalExpressionJS\r\n\t\t\tresult.right = this.findFirstIn(patterns,\r\n\t\t\t\t(backward) ? (start - length + currentLength) : (start + length - currentLength),\r\n\t\t\t\tcurrentLength,\r\n\t\t\t\tbackward);\r\n\t\t\t//endregion\r\n\t\t\t\r\n\t\t\t//region No pattern at all\r\n\t\t\t// noinspection EqualityComparisonWithCoercionJS\r\n\t\t\tif(result.right.id == (-1))\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = currentLength;\r\n\t\t\t\t\r\n\t\t\t\tif(backward)\r\n\t\t\t\t{\r\n\t\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\t\tstart -= length;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\t\tstart = result.left.position;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tresult.value = new ByteStream();\r\n\t\t\t\t\r\n\t\t\t\tresult.value._buffer = this._buffer.slice(start, start + length);\r\n\t\t\t\tresult.value._view = new Uint8Array(result.value._buffer);\r\n\t\t\t\t\r\n\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t//endregion\r\n\t\t\t\r\n\t\t\t//region Check distance between two patterns\r\n\t\t\t// noinspection ConditionalExpressionJS, EqualityComparisonWithCoercionJS\r\n\t\t\tif(result.right.position != ((backward) ? (result.left.position - patterns[result.right.id].buffer.byteLength) : (result.left.position + patterns[result.right.id].buffer.byteLength)))\r\n\t\t\t{\r\n\t\t\t\tif(backward)\r\n\t\t\t\t{\r\n\t\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\t\tstart = result.right.position + patterns[result.right.id].buffer.byteLength;\r\n\t\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\t\tlength = result.left.position - result.right.position - patterns[result.right.id].buffer.byteLength;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\t\tstart = result.left.position;\r\n\t\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\t\tlength = result.right.position - result.left.position - patterns[result.right.id].buffer.byteLength;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tresult.value = new ByteStream();\r\n\t\t\t\t\r\n\t\t\t\tresult.value._buffer = this._buffer.slice(start, start + length);\r\n\t\t\t\tresult.value._view = new Uint8Array(result.value._buffer);\r\n\t\t\t\t\r\n\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t//endregion\r\n\t\t\t\r\n\t\t\t//region Store information about previous pattern\r\n\t\t\tresult.left = result.right;\r\n\t\t\t//endregion\r\n\t\t\t\r\n\t\t\t//region Change current length\r\n\t\t\tcurrentLength -= patterns[result.right.id]._buffer.byteLength;\r\n\t\t\t//endregion\r\n\t\t}\r\n\t\t\r\n\t\t//region Swap \"patterns\" in case of backward order\r\n\t\tif(backward)\r\n\t\t{\r\n\t\t\tconst temp = result.right;\r\n\t\t\tresult.right = result.left;\r\n\t\t\tresult.left = temp;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Find all positions of data, not included in patterns from input array\r\n\t * @param {Array.<ByteStream>} patterns Array with patterns which should be ommited\r\n\t * @param {?number} [start] Start position to search from\r\n\t * @param {?number} [length] Length of byte block to search at\r\n\t * @returns {Array}\r\n\t */\r\n\tfindAllNotIn(patterns, start = null, length = null)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tconst result = [];\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(start == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(start > (this.buffer.byteLength - 1))\r\n\t\t\treturn result;\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(length == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t}\r\n\t\t\r\n\t\tif(length > (this.buffer.byteLength - start))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t}\r\n\t\t\r\n\t\tlet patternFound = {\r\n\t\t\tleft: {\r\n\t\t\t\tid: (-1),\r\n\t\t\t\tposition: start\r\n\t\t\t},\r\n\t\t\tright: {\r\n\t\t\t\tid: (-1),\r\n\t\t\t\tposition: start\r\n\t\t\t},\r\n\t\t\tvalue: new ByteStream()\r\n\t\t};\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Find all accurences of patterns\r\n\t\t// noinspection EqualityComparisonWithCoercionJS\r\n\t\tdo\r\n\t\t{\r\n\t\t\tconst position = patternFound.right.position;\r\n\t\t\t\r\n\t\t\tpatternFound = this.findFirstNotIn(patterns, patternFound.right.position, length);\r\n\t\t\t\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength -= (patternFound.right.position - position);\r\n\t\t\t\r\n\t\t\tresult.push({\r\n\t\t\t\tleft: {\r\n\t\t\t\t\tid: patternFound.left.id,\r\n\t\t\t\t\tposition: patternFound.left.position\r\n\t\t\t\t},\r\n\t\t\t\tright: {\r\n\t\t\t\t\tid: patternFound.right.id,\r\n\t\t\t\t\tposition: patternFound.right.position\r\n\t\t\t\t},\r\n\t\t\t\tvalue: patternFound.value\r\n\t\t\t});\r\n\t\t} while(patternFound.right.id != (-1));\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleReturnPointsJS, OverlyComplexFunctionJS\r\n\t/**\r\n\t * Find position of a sequence of any patterns from input array\r\n\t * @param {Array.<ByteStream>} patterns Array of pattern to look for\r\n\t * @param {?number} [start] Start position to search from\r\n\t * @param {?number} [length] Length of byte block to search at\r\n\t * @param {boolean} [backward=false] Flag to search in backward order\r\n\t * @returns {*}\r\n\t */\r\n\tfindFirstSequence(patterns, start = null, length = null, backward = false)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(start == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS, ConditionalExpressionJS\r\n\t\t\tstart = (backward) ? this.buffer.byteLength : 0;\r\n\t\t}\r\n\t\t\r\n\t\tif(start > this.buffer.byteLength)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = this.buffer.byteLength;\r\n\t\t}\r\n\t\t\r\n\t\tif(backward)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\t\tif(length == null)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = start;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(length > start)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = start;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\t\tif(length == null)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(length > (this.buffer.byteLength - start))\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Find first byte from sequence\r\n\t\tconst firstIn = this.skipNotPatterns(patterns, start, length, backward);\r\n\t\t// noinspection EqualityComparisonWithCoercionJS\r\n\t\tif(firstIn == (-1))\r\n\t\t{\r\n\t\t\treturn {\r\n\t\t\t\tposition: (-1),\r\n\t\t\t\tvalue: new ByteStream()\r\n\t\t\t};\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Find first byte not in sequence\r\n\t\t// noinspection ConditionalExpressionJS\r\n\t\tconst firstNotIn = this.skipPatterns(patterns,\r\n\t\t\tfirstIn,\r\n\t\t\tlength - ((backward) ? (start - firstIn) : (firstIn - start)),\r\n\t\t\tbackward);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Make output value\r\n\t\tif(backward)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = firstNotIn;\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = (firstIn - firstNotIn);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = firstIn;\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = (firstNotIn - firstIn);\r\n\t\t}\r\n\t\t\r\n\t\tconst value = new ByteStream();\r\n\t\t\r\n\t\tvalue._buffer = this._buffer.slice(start, start + length);\r\n\t\tvalue._view = new Uint8Array(value._buffer);\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn {\r\n\t\t\tposition: firstNotIn,\r\n\t\t\tvalue\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Find all positions of a sequence of any patterns from input array\r\n\t * @param {Array.<ByteStream>} patterns Array of patterns to search for\r\n\t * @param {?number} [start] Start position to search from\r\n\t * @param {?number} [length] Length of byte block to search at\r\n\t * @returns {Array}\r\n\t */\r\n\tfindAllSequences(patterns, start = null, length = null)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tconst result = [];\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(start == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(start > (this.buffer.byteLength - 1))\r\n\t\t\treturn result;\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(length == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t}\r\n\t\t\r\n\t\tif(length > (this.buffer.byteLength - start))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t}\r\n\t\t\r\n\t\tlet patternFound = {\r\n\t\t\tposition: start,\r\n\t\t\tvalue: new ByteStream()\r\n\t\t};\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Find all accurences of patterns\r\n\t\t// noinspection EqualityComparisonWithCoercionJS\r\n\t\tdo\r\n\t\t{\r\n\t\t\tconst position = patternFound.position;\r\n\t\t\t\r\n\t\t\tpatternFound = this.findFirstSequence(patterns, patternFound.position, length);\r\n\t\t\t\r\n\t\t\t// noinspection EqualityComparisonWithCoercionJS\r\n\t\t\tif(patternFound.position != (-1))\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength -= (patternFound.position - position);\r\n\t\t\t\t\r\n\t\t\t\tresult.push({\r\n\t\t\t\t\tposition: patternFound.position,\r\n\t\t\t\t\tvalue: patternFound.value\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} while(patternFound.position != (-1));\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleLoopsJS, FunctionWithMultipleReturnPointsJS, OverlyComplexFunctionJS, FunctionTooLongJS\r\n\t/**\r\n\t * Find all paired patterns in the stream\r\n\t * @param {ByteStream} leftPattern Left pattern to search for\r\n\t * @param {ByteStream} rightPattern Right pattern to search for\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @returns {Array}\r\n\t */\r\n\tfindPairedPatterns(leftPattern, rightPattern, start = null, length = null)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tconst result = [];\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(leftPattern.isEqual(rightPattern))\r\n\t\t\treturn result;\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(start == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(start > (this.buffer.byteLength - 1))\r\n\t\t\treturn result;\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(length == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t}\r\n\t\t\r\n\t\tif(length > (this.buffer.byteLength - start))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t}\r\n\t\t\r\n\t\tlet currentPositionLeft = 0;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Find all \"left patterns\" as sorted array\r\n\t\tconst leftPatterns = this.findAllPatternIn(leftPattern, start, length);\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\tif(leftPatterns.length == 0)\r\n\t\t\treturn result;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Find all \"right patterns\" as sorted array\r\n\t\tconst rightPatterns = this.findAllPatternIn(rightPattern, start, length);\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\tif(rightPatterns.length == 0)\r\n\t\t\treturn result;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Combine patterns\r\n\t\twhile(currentPositionLeft < leftPatterns.length)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, EqualityComparisonWithCoercionJS\r\n\t\t\tif(rightPatterns.length == 0)\r\n\t\t\t{\r\n\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// noinspection EqualityComparisonWithCoercionJS\r\n\t\t\tif(leftPatterns[0] == rightPatterns[0])\r\n\t\t\t{\r\n\t\t\t\t// Possible situation when one pattern is a part of another\r\n\t\t\t\t// For example \"stream\" and \"endstream\"\r\n\t\t\t\t// In case when we have only \"endstream\" in fact \"stream\" will be also found at the same position\r\n\t\t\t\t// (position of the pattern is an index AFTER the pattern)\r\n\t\t\t\t\r\n\t\t\t\tresult.push({\r\n\t\t\t\t\tleft: leftPatterns[0],\r\n\t\t\t\t\tright: rightPatterns[0]\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tleftPatterns.splice(0, 1);\r\n\t\t\t\trightPatterns.splice(0, 1);\r\n\t\t\t\t\r\n\t\t\t\t// noinspection ContinueStatementJS\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(leftPatterns[currentPositionLeft] > rightPatterns[0])\r\n\t\t\t{\r\n\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\twhile(leftPatterns[currentPositionLeft] < rightPatterns[0])\r\n\t\t\t{\r\n\t\t\t\tcurrentPositionLeft++;\r\n\t\t\t\t\r\n\t\t\t\tif(currentPositionLeft >= leftPatterns.length)\r\n\t\t\t\t{\r\n\t\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tresult.push({\r\n\t\t\t\tleft: leftPatterns[currentPositionLeft - 1],\r\n\t\t\t\tright: rightPatterns[0]\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tleftPatterns.splice(currentPositionLeft - 1, 1);\r\n\t\t\trightPatterns.splice(0, 1);\r\n\t\t\t\r\n\t\t\tcurrentPositionLeft = 0;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Sort result\r\n\t\tresult.sort((a, b) => (a.left - b.left));\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleLoopsJS, FunctionWithMultipleReturnPointsJS, OverlyComplexFunctionJS, FunctionTooLongJS\r\n\t/**\r\n\t * Find all paired patterns in the stream\r\n\t * @param {Array.<ByteStream>} inputLeftPatterns Array of left patterns to search for\r\n\t * @param {Array.<ByteStream>} inputRightPatterns Array of right patterns to search for\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @returns {Array}\r\n\t */\r\n\tfindPairedArrays(inputLeftPatterns, inputRightPatterns, start = null, length = null)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tconst result = [];\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(start == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(start > (this.buffer.byteLength - 1))\r\n\t\t\treturn result;\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(length == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t}\r\n\t\t\r\n\t\tif(length > (this.buffer.byteLength - start))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t}\r\n\t\t\r\n\t\tlet currentPositionLeft = 0;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Find all \"left patterns\" as sorted array\r\n\t\tconst leftPatterns = this.findAllIn(inputLeftPatterns, start, length);\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\tif(leftPatterns.length == 0)\r\n\t\t\treturn result;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Find all \"right patterns\" as sorted array\r\n\t\tconst rightPatterns = this.findAllIn(inputRightPatterns, start, length);\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\tif(rightPatterns.length == 0)\r\n\t\t\treturn result;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Combine patterns\r\n\t\twhile(currentPositionLeft < leftPatterns.length)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, EqualityComparisonWithCoercionJS\r\n\t\t\tif(rightPatterns.length == 0)\r\n\t\t\t{\r\n\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// noinspection EqualityComparisonWithCoercionJS\r\n\t\t\tif(leftPatterns[0].position == rightPatterns[0].position)\r\n\t\t\t{\r\n\t\t\t\t// Possible situation when one pattern is a part of another\r\n\t\t\t\t// For example \"stream\" and \"endstream\"\r\n\t\t\t\t// In case when we have only \"endstream\" in fact \"stream\" will be also found at the same position\r\n\t\t\t\t// (position of the pattern is an index AFTER the pattern)\r\n\t\t\t\t\r\n\t\t\t\tresult.push({\r\n\t\t\t\t\tleft: leftPatterns[0],\r\n\t\t\t\t\tright: rightPatterns[0]\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tleftPatterns.splice(0, 1);\r\n\t\t\t\trightPatterns.splice(0, 1);\r\n\t\t\t\t\r\n\t\t\t\t// noinspection ContinueStatementJS\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(leftPatterns[currentPositionLeft].position > rightPatterns[0].position)\r\n\t\t\t{\r\n\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\twhile(leftPatterns[currentPositionLeft].position < rightPatterns[0].position)\r\n\t\t\t{\r\n\t\t\t\tcurrentPositionLeft++;\r\n\t\t\t\t\r\n\t\t\t\tif(currentPositionLeft >= leftPatterns.length)\r\n\t\t\t\t{\r\n\t\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tresult.push({\r\n\t\t\t\tleft: leftPatterns[currentPositionLeft - 1],\r\n\t\t\t\tright: rightPatterns[0]\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tleftPatterns.splice(currentPositionLeft - 1, 1);\r\n\t\t\trightPatterns.splice(0, 1);\r\n\t\t\t\r\n\t\t\tcurrentPositionLeft = 0;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Sort result\r\n\t\tresult.sort((a, b) => (a.left.position - b.left.position));\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleReturnPointsJS, FunctionTooLongJS\r\n\t/**\r\n\t * Replace one patter with other\r\n\t * @param {ByteStream} searchPattern The pattern to search for\r\n\t * @param {ByteStream} replacePattern The pattern to replace initial pattern\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @param {Array|null} [findAllResult=null] Pre-calculated results of \"findAllIn\"\r\n\t * @returns {*}\r\n\t */\r\n\treplacePattern(searchPattern, replacePattern, start = null, length = null, findAllResult = null)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tlet result;\r\n\t\t\r\n\t\tlet i;\r\n\t\tconst output = {\r\n\t\t\tstatus: (-1),\r\n\t\t\tsearchPatternPositions: [],\r\n\t\t\treplacePatternPositions: []\r\n\t\t};\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(start == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(start > (this.buffer.byteLength - 1))\r\n\t\t\treturn false;\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(length == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t}\r\n\t\t\r\n\t\tif(length > (this.buffer.byteLength - start))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Find a pattern to search for\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif(findAllResult == null)\r\n\t\t{\r\n\t\t\tresult = this.findAllIn([searchPattern], start, length);\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\t\tif(result.length == 0)\r\n\t\t\t\treturn output;\r\n\t\t}\r\n\t\telse\r\n\t\t\tresult = findAllResult;\r\n\t\t\r\n\t\t// noinspection NestedFunctionCallJS\r\n\t\toutput.searchPatternPositions.push(...Array.from(result, element => element.position));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Variables for new buffer initialization\r\n\t\tconst patternDifference = searchPattern.buffer.byteLength - replacePattern.buffer.byteLength;\r\n\t\t\r\n\t\tconst changedBuffer = new ArrayBuffer(this.view.length - (result.length * patternDifference));\r\n\t\tconst changedView = new Uint8Array(changedBuffer);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Copy data from 0 to start\r\n\t\t// noinspection NestedFunctionCallJS\r\n\t\tchangedView.set(new Uint8Array(this.buffer, 0, start));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Replace pattern\r\n\t\tfor(i = 0; i < result.length; i++)\r\n\t\t{\r\n\t\t\t//region Initial variables\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, ConditionalExpressionJS, EqualityComparisonWithCoercionJS\r\n\t\t\tconst currentPosition = (i == 0) ? start : result[i - 1].position;\r\n\t\t\t//endregion\r\n\t\t\t\r\n\t\t\t//region Copy bytes other then search pattern\r\n\t\t\t// noinspection NestedFunctionCallJS\r\n\t\t\tchangedView.set(new Uint8Array(this.buffer, currentPosition, result[i].position - searchPattern.buffer.byteLength - currentPosition), currentPosition - i * patternDifference);\r\n\t\t\t//endregion\r\n\t\t\t\r\n\t\t\t//region Put replace pattern in a new buffer\r\n\t\t\tchangedView.set(replacePattern.view, result[i].position - searchPattern.buffer.byteLength - i * patternDifference);\r\n\t\t\t\r\n\t\t\toutput.replacePatternPositions.push(result[i].position - searchPattern.buffer.byteLength - i * patternDifference);\r\n\t\t\t//endregion\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Copy data from the end of old buffer\r\n\t\ti--;\r\n\t\t// noinspection NestedFunctionCallJS\r\n\t\tchangedView.set(new Uint8Array(this.buffer, result[i].position, this.buffer.byteLength - result[i].position), result[i].position - searchPattern.buffer.byteLength + replacePattern.buffer.byteLength - i * patternDifference);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Re-initialize existing buffer\r\n\t\tthis.buffer = changedBuffer;\r\n\t\tthis.view = new Uint8Array(this.buffer);\r\n\t\t//endregion\r\n\t\t\r\n\t\toutput.status = 1;\r\n\t\t\r\n\t\treturn output;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleLoopsJS, FunctionWithMultipleReturnPointsJS, OverlyComplexFunctionJS, FunctionTooLongJS\r\n\t/**\r\n\t * Skip any pattern from input array\r\n\t * @param {Array.<ByteStream>} patterns Array with patterns which should be ommited\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @param {boolean} [backward=false] Flag to search in backward order\r\n\t * @returns {*}\r\n\t */\r\n\tskipPatterns(patterns, start = null, length = null, backward = false)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(start == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS, ConditionalExpressionJS\r\n\t\t\tstart = (backward) ? this.buffer.byteLength : 0;\r\n\t\t}\r\n\t\t\r\n\t\tif(start > this.buffer.byteLength)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = this.buffer.byteLength;\r\n\t\t}\r\n\t\t\r\n\t\tif(backward)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\t\tif(length == null)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = start;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(length > start)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = start;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\t\tif(length == null)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(length > (this.buffer.byteLength - start))\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tlet result = start;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Search for pattern\r\n\t\tfor(let k = 0; k < patterns.length; k++)\r\n\t\t{\r\n\t\t\tconst patternLength = patterns[k].buffer.byteLength;\r\n\t\t\t// noinspection ConditionalExpressionJS\r\n\t\t\tconst equalStart = (backward) ? (result - patternLength) : (result);\r\n\t\t\tlet equal = true;\r\n\t\t\t\r\n\t\t\tfor(let j = 0; j < patternLength; j++)\r\n\t\t\t{\r\n\t\t\t\t// noinspection EqualityComparisonWithCoercionJS\r\n\t\t\t\tif(this.view[j + equalStart] != patterns[k].view[j])\r\n\t\t\t\t{\r\n\t\t\t\t\tequal = false;\r\n\t\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(equal)\r\n\t\t\t{\r\n\t\t\t\tk = (-1);\r\n\t\t\t\t\r\n\t\t\t\tif(backward)\r\n\t\t\t\t{\r\n\t\t\t\t\tresult -= patternLength;\r\n\t\t\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\t\t\t\tif(result <= 0)\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tresult += patternLength;\r\n\t\t\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\t\t\tif(result >= (start + length))\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleLoopsJS, OverlyComplexFunctionJS, FunctionTooLongJS\r\n\t/**\r\n\t * Skip any pattern not from input array\r\n\t * @param {Array.<ByteStream>} patterns Array with patterns which should not be ommited\r\n\t * @param start\r\n\t * @param length\r\n\t * @param backward\r\n\t * @returns {number}\r\n\t */\r\n\tskipNotPatterns(patterns, start = null, length = null, backward = false)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(start == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS, ConditionalExpressionJS\r\n\t\t\tstart = (backward) ? this.buffer.byteLength : 0;\r\n\t\t}\r\n\t\t\r\n\t\tif(start > this.buffer.byteLength)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = this.buffer.byteLength;\r\n\t\t}\r\n\t\t\r\n\t\tif(backward)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\t\tif(length == null)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = start;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(length > start)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = start;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\t\tif(length == null)\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(length > (this.buffer.byteLength - start))\r\n\t\t\t{\r\n\t\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\t\tlength = this.buffer.byteLength - start;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tlet result = (-1);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Search for pattern\r\n\t\tfor(let i = 0; i < length; i++)\r\n\t\t{\r\n\t\t\tfor(let k = 0; k < patterns.length; k++)\r\n\t\t\t{\r\n\t\t\t\tconst patternLength = patterns[k].buffer.byteLength;\r\n\t\t\t\t// noinspection ConditionalExpressionJS\r\n\t\t\t\tconst equalStart = (backward) ? (start - i - patternLength) : (start + i);\r\n\t\t\t\tlet equal = true;\r\n\t\t\t\t\r\n\t\t\t\tfor(let j = 0; j < patternLength; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\t// noinspection EqualityComparisonWithCoercionJS\r\n\t\t\t\t\tif(this.view[j + equalStart] != patterns[k].view[j])\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tequal = false;\r\n\t\t\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(equal)\r\n\t\t\t\t{\r\n\t\t\t\t\t// noinspection ConditionalExpressionJS\r\n\t\t\t\t\tresult = (backward) ? (start - i) : (start + i); // Exact position of pattern found\r\n\t\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// noinspection EqualityComparisonWithCoercionJS\r\n\t\t\tif(result != (-1))\r\n\t\t\t{\r\n\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\nexport class SeqStream \r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"SeqStream\" class\r\n\t * @param {{[stream]: ByteStream, [length]: number, [backward]: boolean, [start]: number, [appendBlock]: number}} parameters\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t/**\r\n\t\t * Major stream\r\n\t\t * @type {ByteStream}\r\n\t\t */\r\n\t\tthis.stream = new ByteStream();\r\n\t\t/**\r\n\t\t * Length of the major stream\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis._length = 0;\r\n\t\t/**\r\n\t\t * Flag to search in backward direction\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.backward = false;\r\n\t\t/**\r\n\t\t * Start position to search\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis._start = 0;\r\n\t\t/**\r\n\t\t * Length of a block when append information to major stream\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.appendBlock = 0;\r\n\t\t\r\n\t\tthis.prevLength = 0;\r\n\t\tthis.prevStart = 0;\r\n\t\t\r\n\t\tfor(const key of Object.keys(parameters))\r\n\t\t{\r\n\t\t\tswitch(key)\r\n\t\t\t{\r\n\t\t\t\tcase \"stream\":\r\n\t\t\t\t\tthis.stream = parameters.stream;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"backward\":\r\n\t\t\t\t\tthis.backward = parameters.backward;\r\n\t\t\t\t\t// noinspection JSUnusedGlobalSymbols\r\n\t\t\t\t\tthis._start = this.stream.buffer.byteLength;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"length\":\r\n\t\t\t\t\t// noinspection JSUnusedGlobalSymbols\r\n\t\t\t\t\tthis._length = parameters.length;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"start\":\r\n\t\t\t\t\t// noinspection JSUnusedGlobalSymbols\r\n\t\t\t\t\tthis._start = parameters.start;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"appendBlock\":\r\n\t\t\t\t\tthis.appendBlock = parameters.appendBlock;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"view\":\r\n\t\t\t\t\tthis.stream = new ByteStream({ view: parameters.view});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"buffer\":\r\n\t\t\t\t\tthis.stream = new ByteStream({ buffer: parameters.buffer});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\t\tthis.stream = new ByteStream({ string: parameters.string});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"hexstring\":\r\n\t\t\t\t\tthis.stream = new ByteStream({ hexstring: parameters.hexstring});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Setter for \"stream\" property\r\n\t * @param {ByteStream} value\r\n\t */\r\n\tset stream(value)\r\n\t{\r\n\t\tthis._stream = value;\r\n\t\t\r\n\t\tthis.prevLength = this._length;\r\n\t\t// noinspection JSUnusedGlobalSymbols\r\n\t\tthis._length = value._buffer.byteLength;\r\n\t\t\r\n\t\tthis.prevStart = this._start;\r\n\t\t// noinspection JSUnusedGlobalSymbols\r\n\t\tthis._start = 0;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Getter for \"stream\" property\r\n\t * @returns {ByteStream}\r\n\t */\r\n\tget stream()\r\n\t{\r\n\t\treturn this._stream;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Setter for \"length\" property\r\n\t * @param {number} value\r\n\t */\r\n\tset length(value)\r\n\t{\r\n\t\tthis.prevLength = this._length;\r\n\t\t// noinspection JSUnusedGlobalSymbols\r\n\t\tthis._length = value;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Getter for \"length\" property\r\n\t * @returns {number}\r\n\t */\r\n\tget length()\r\n\t{\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(this.appendBlock)\r\n\t\t\treturn this.start;\r\n\t\t\r\n\t\treturn this._length;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Setter for \"start\" property\r\n\t * @param {number} value\r\n\t */\r\n\tset start(value)\r\n\t{\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(value > this.stream.buffer.byteLength)\r\n\t\t\treturn;\r\n\t\t\r\n\t\t//region Initialization of \"prev\" internal variables\r\n\t\tthis.prevStart = this._start;\r\n\t\tthis.prevLength = this._length;\r\n\t\t//endregion\r\n\t\t\r\n\t\t// noinspection JSUnusedGlobalSymbols, ConditionalExpressionJS\r\n\t\tthis._length -= ((this.backward) ? (this._start - value) : (value - this._start));\r\n\t\t// noinspection JSUnusedGlobalSymbols\r\n\t\tthis._start = value;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Getter for \"start\" property\r\n\t * @returns {number}\r\n\t */\r\n\tget start()\r\n\t{\r\n\t\treturn this._start;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return ArrayBuffer with having value of existing SeqStream length\r\n\t * @return {ArrayBuffer}\r\n\t */\r\n\tget buffer()\r\n\t{\r\n\t\treturn this._stream._buffer.slice(0, this._length);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Reset current position of the \"SeqStream\"\r\n\t */\r\n\tresetPosition()\r\n\t{\r\n\t\t// noinspection JSUnusedGlobalSymbols\r\n\t\tthis._start = this.prevStart;\r\n\t\t// noinspection JSUnusedGlobalSymbols\r\n\t\tthis._length = this.prevLength;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Find any byte pattern in \"ByteStream\"\r\n\t * @param {ByteStream} pattern Stream having pattern value\r\n\t * @param {?number} [gap] Maximum gap between start position and position of nearest object\r\n\t * @returns {number}\r\n\t */\r\n\tfindPattern(pattern, gap = null)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif((gap == null) || (gap > this.length))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tgap = this.length;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Find pattern\r\n\t\tconst result = this.stream.findPattern(pattern, this.start, this.length, this.backward);\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\tif(result == (-1))\r\n\t\t\treturn result;\r\n\t\t\r\n\t\tif(this.backward)\r\n\t\t{\r\n\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\tif(result < (this.start - pattern.buffer.byteLength - gap))\r\n\t\t\t\treturn (-1);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\tif(result > (this.start + pattern.buffer.byteLength + gap))\r\n\t\t\t\treturn (-1);\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Create new values\r\n\t\tthis.start = result;\r\n\t\t//endregion ;\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Find first position of any pattern from input array\r\n\t * @param {Array.<ByteStream>} patterns Array with patterns which should be found\r\n\t * @param {?number} [gap] Maximum gap between start position and position of nearest object\r\n\t * @returns {{id: number, position: number}}\r\n\t */\r\n\tfindFirstIn(patterns, gap = null)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif((gap == null) || (gap > this.length))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tgap = this.length;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Search for patterns\r\n\t\tconst result = this.stream.findFirstIn(patterns, this.start, this.length, this.backward);\r\n\t\t// noinspection NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\tif(result.id == (-1))\r\n\t\t\treturn result;\r\n\t\t\r\n\t\tif(this.backward)\r\n\t\t{\r\n\t\t\tif(result.position < (this.start - patterns[result.id].buffer.byteLength - gap))\r\n\t\t\t{\r\n\t\t\t\t// noinspection ConditionalExpressionJS\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: (-1),\r\n\t\t\t\t\tposition: (this.backward) ? 0 : (this.start + this.length)\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(result.position > (this.start + patterns[result.id].buffer.byteLength + gap))\r\n\t\t\t{\r\n\t\t\t\t// noinspection ConditionalExpressionJS\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: (-1),\r\n\t\t\t\t\tposition: (this.backward) ? 0 : (this.start + this.length)\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Create new values\r\n\t\tthis.start = result.position;\r\n\t\t//endregion ;\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Find all positions of any pattern from input array\r\n\t * @param {Array.<ByteStream>} patterns Array with patterns which should be found\r\n\t * @returns {Array}\r\n\t */\r\n\tfindAllIn(patterns)\r\n\t{\r\n\t\t// In case of \"backward order\" the start position is at the end on stream.\r\n\t\t// In case of \"normal order\" the start position is at the begging of the stream.\r\n\t\t// But in fact for search for all patterns we need to have start position in \"normal order\".\r\n\t\t// noinspection ConditionalExpressionJS\r\n\t\tconst start = (this.backward) ? (this.start - this.length) : this.start;\r\n\t\t\r\n\t\treturn this.stream.findAllIn(patterns, start, this.length);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleReturnPointsJS, OverlyComplexFunctionJS\r\n\t/**\r\n\t * Find first position of data, not included in patterns from input array\r\n\t * @param {Array.<ByteStream>} patterns Array with patterns which should be ommited\r\n\t * @param {?number} gap Maximum gap between start position and position of nearest object\r\n\t * @returns {*}\r\n\t */\r\n\tfindFirstNotIn(patterns, gap = null)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif((gap == null) || (gap > this._length))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tgap = this._length;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Search for patterns\r\n\t\tconst result = this._stream.findFirstNotIn(patterns, this._start, this._length, this.backward);\r\n\t\t// noinspection NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\tif((result.left.id == (-1)) && (result.right.id == (-1)))\r\n\t\t\treturn result;\r\n\t\t\r\n\t\tif(this.backward)\r\n\t\t{\r\n\t\t\t// noinspection EqualityComparisonWithCoercionJS\r\n\t\t\tif(result.right.id != (-1))\r\n\t\t\t{\r\n\t\t\t\tif(result.right.position < (this._start - patterns[result.right.id]._buffer.byteLength - gap))\r\n\t\t\t\t{\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tleft: {\r\n\t\t\t\t\t\t\tid: (-1),\r\n\t\t\t\t\t\t\tposition: this._start\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tright: {\r\n\t\t\t\t\t\t\tid: (-1),\r\n\t\t\t\t\t\t\tposition: 0\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tvalue: new ByteStream()\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// noinspection EqualityComparisonWithCoercionJS\r\n\t\t\tif(result.left.id != (-1))\r\n\t\t\t{\r\n\t\t\t\tif(result.left.position > (this._start + patterns[result.left.id]._buffer.byteLength + gap))\r\n\t\t\t\t{\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tleft: {\r\n\t\t\t\t\t\t\tid: (-1),\r\n\t\t\t\t\t\t\tposition: this._start\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tright: {\r\n\t\t\t\t\t\t\tid: (-1),\r\n\t\t\t\t\t\t\tposition: 0\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tvalue: new ByteStream()\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Create new values\r\n\t\tif(this.backward)\r\n\t\t{\r\n\t\t\t// noinspection NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\t\tif(result.left.id == (-1))\r\n\t\t\t\tthis.start = 0;\r\n\t\t\telse\r\n\t\t\t\tthis.start = result.left.position;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// noinspection NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\t\tif(result.right.id == (-1))\r\n\t\t\t\tthis.start = (this._start + this._length);\r\n\t\t\telse\r\n\t\t\t\tthis.start = result.right.position;\r\n\t\t}\r\n\t\t//endregion ;\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Find all positions of data, not included in patterns from input array\r\n\t * @param {Array.<ByteStream>} patterns Array with patterns which should be ommited\r\n\t * @returns {Array}\r\n\t */\r\n\tfindAllNotIn(patterns)\r\n\t{\r\n\t\t// In case of \"backward order\" the start position is at the end on stream.\r\n\t\t// In case of \"normal order\" the start position is at the begging of the stream.\r\n\t\t// But in fact for search for all patterns we need to have start position in \"normal order\".\r\n\t\t// noinspection ConditionalExpressionJS\r\n\t\tconst start = (this.backward) ? (this._start - this._length) : this._start;\r\n\t\t\r\n\t\treturn this._stream.findAllNotIn(patterns, start, this._length);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Find position of a sequence of any patterns from input array\r\n\t * @param {Array.<ByteStream>} patterns Array with patterns which should be ommited\r\n\t * @param {?number} [length] Length to search sequence for\r\n\t * @param {?number} [gap] Maximum gap between start position and position of nearest object\r\n\t * @returns {*}\r\n\t */\r\n\tfindFirstSequence(patterns, length = null, gap = null)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif((length == null) || (length > this._length))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this._length;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif((gap == null) || (gap > length))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tgap = length;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Search for sequence\r\n\t\tconst result = this._stream.findFirstSequence(patterns, this._start, length, this.backward);\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\tif(result.value.buffer.byteLength == 0)\r\n\t\t\treturn result;\r\n\t\t\r\n\t\tif(this.backward)\r\n\t\t{\r\n\t\t\tif(result.position < (this._start - result.value._buffer.byteLength - gap))\r\n\t\t\t{\r\n\t\t\t\treturn {\r\n\t\t\t\t\tposition: (-1),\r\n\t\t\t\t\tvalue: new ByteStream()\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(result.position > (this._start + result.value._buffer.byteLength + gap))\r\n\t\t\t{\r\n\t\t\t\treturn {\r\n\t\t\t\t\tposition: (-1),\r\n\t\t\t\t\tvalue: new ByteStream()\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Create new values\r\n\t\tthis.start = result.position;\r\n\t\t//endregion ;\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Find position of a sequence of any patterns from input array\r\n\t * @param {Array.<ByteStream>} patterns Array with patterns which should be found\r\n\t * @returns {Array}\r\n\t */\r\n\tfindAllSequences(patterns)\r\n\t{\r\n\t\t// In case of \"backward order\" the start position is at the end on stream.\r\n\t\t// In case of \"normal order\" the start position is at the begging of the stream.\r\n\t\t// But in fact for search for all patterns we need to have start position in \"normal order\".\r\n\t\t// noinspection ConditionalExpressionJS\r\n\t\tconst start = (this.backward) ? (this.start - this.length) : this.start;\r\n\t\t\r\n\t\treturn this.stream.findAllSequences(patterns, start, this.length);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Find all paired patterns in the stream\r\n\t * @param {ByteStream} leftPattern Left pattern to search for\r\n\t * @param {ByteStream} rightPattern Right pattern to search for\r\n\t * @param {?number} [gap] Maximum gap between start position and position of nearest object\r\n\t * @returns {Array}\r\n\t */\r\n\tfindPairedPatterns(leftPattern, rightPattern, gap = null)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif((gap == null) || (gap > this.length))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tgap = this.length;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t// In case of \"backward order\" the start position is at the end on stream.\r\n\t\t// In case of \"normal order\" the start position is at the begging of the stream.\r\n\t\t// But in fact for search for all patterns we need to have start position in \"normal order\".\r\n\t\t// noinspection ConditionalExpressionJS\r\n\t\tconst start = (this.backward) ? (this.start - this.length) : this.start;\r\n\t\t\r\n\t\t//region Search for patterns\r\n\t\tconst result = this.stream.findPairedPatterns(leftPattern, rightPattern, start, this.length);\r\n\t\tif(result.length)\r\n\t\t{\r\n\t\t\tif(this.backward)\r\n\t\t\t{\r\n\t\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\t\tif(result[0].right < (this.start - rightPattern.buffer.byteLength - gap))\r\n\t\t\t\t\treturn [];\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\t\tif(result[0].left > (this.start + leftPattern.buffer.byteLength + gap))\r\n\t\t\t\t\treturn [];\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Find all paired patterns in the stream\r\n\t * @param {Array.<ByteStream>} leftPatterns Array of left patterns to search for\r\n\t * @param {Array.<ByteStream>} rightPatterns Array of right patterns to search for\r\n\t * @param {?number} [gap] Maximum gap between start position and position of nearest object\r\n\t * @returns {Array}\r\n\t */\r\n\tfindPairedArrays(leftPatterns, rightPatterns, gap = null)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif((gap == null) || (gap > this.length))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tgap = this.length;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t// In case of \"backward order\" the start position is at the end on stream.\r\n\t\t// In case of \"normal order\" the start position is at the begging of the stream.\r\n\t\t// But in fact for search for all patterns we need to have start position in \"normal order\".\r\n\t\t// noinspection ConditionalExpressionJS\r\n\t\tconst start = (this.backward) ? (this.start - this.length) : this.start;\r\n\t\t\r\n\t\t//region Search for patterns\r\n\t\tconst result = this.stream.findPairedArrays(leftPatterns, rightPatterns, start, this.length);\r\n\t\tif(result.length)\r\n\t\t{\r\n\t\t\tif(this.backward)\r\n\t\t\t{\r\n\t\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\t\tif(result[0].right.position < (this.start - rightPatterns[result[0].right.id].buffer.byteLength - gap))\r\n\t\t\t\t\treturn [];\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\t\tif(result[0].left.position > (this.start + leftPatterns[result[0].left.id].buffer.byteLength + gap))\r\n\t\t\t\t\treturn [];\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Replace one patter with other\r\n\t * @param {ByteStream} searchPattern The pattern to search for\r\n\t * @param {ByteStream} replacePattern The pattern to replace initial pattern\r\n\t * @returns {*}\r\n\t */\r\n\treplacePattern(searchPattern, replacePattern)\r\n\t{\r\n\t\t// In case of \"backward order\" the start position is at the end on stream.\r\n\t\t// In case of \"normal order\" the start position is at the begging of the stream.\r\n\t\t// But in fact for search for all patterns we need to have start position in \"normal order\".\r\n\t\t// noinspection ConditionalExpressionJS\r\n\t\tconst start = (this.backward) ? (this.start - this.length) : this.start;\r\n\t\t\r\n\t\treturn this.stream.replacePattern(searchPattern, replacePattern, start, this.length);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Skip of any pattern from input array\r\n\t * @param {Array.<ByteStream>} patterns Array with patterns which should be ommited\r\n\t * @returns {*}\r\n\t */\r\n\tskipPatterns(patterns)\r\n\t{\r\n\t\tconst result = this.stream.skipPatterns(patterns, this.start, this.length, this.backward);\r\n\t\t\r\n\t\t//region Create new values\r\n\t\tthis.start = result;\r\n\t\t//endregion ;\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Skip of any pattern from input array\r\n\t * @param {Array.<ByteStream>} patterns Array with patterns which should be ommited\r\n\t * @returns {number}\r\n\t */\r\n\tskipNotPatterns(patterns)\r\n\t{\r\n\t\tconst result = this.stream.skipNotPatterns(patterns, this.start, this.length, this.backward);\r\n\t\t// noinspection NonBlockStatementBodyJS, EqualityComparisonWithCoercionJS\r\n\t\tif(result == (-1))\r\n\t\t\treturn (-1);\r\n\t\t\r\n\t\t//region Create new values\r\n\t\tthis.start = result;\r\n\t\t//endregion ;\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Append a new \"Stream\" content to the current \"Stream\"\r\n\t * @param {ByteStream} stream A new \"stream\" to append to current \"stream\"\r\n\t */\r\n\tappend(stream)\r\n\t{\r\n\t\tif((this._start + stream._buffer.byteLength) > this._stream._buffer.byteLength)\r\n\t\t{\r\n\t\t\tif(stream._buffer.byteLength > this.appendBlock)\r\n\t\t\t{\r\n\t\t\t\t// noinspection MagicNumberJS\r\n\t\t\t\tthis.appendBlock = (stream._buffer.byteLength + 1000);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._stream.realloc(this._stream._buffer.byteLength + this.appendBlock);\r\n\t\t}\r\n\t\t\r\n\t\tthis._stream._view.set(stream._view, this._start);\r\n\t\t\r\n\t\tthis._length += (stream._buffer.byteLength * 2);\r\n\t\tthis.start = (this._start + stream._buffer.byteLength);\r\n\t\tthis.prevLength -= (stream._buffer.byteLength * 2);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Append a \"view\" content to the current \"Stream\"\r\n\t * @param {Uint8Array} view A new \"view\" to append to current \"stream\"\r\n\t */\r\n\tappendView(view)\r\n\t{\r\n\t\tif((this._start + view.length) > this._stream._buffer.byteLength)\r\n\t\t{\r\n\t\t\tif(view.length > this.appendBlock)\r\n\t\t\t{\r\n\t\t\t\t// noinspection MagicNumberJS\r\n\t\t\t\tthis.appendBlock = (view.length + 1000);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._stream.realloc(this._stream._buffer.byteLength + this.appendBlock);\r\n\t\t}\r\n\t\t\r\n\t\tthis._stream._view.set(view, this._start);\r\n\t\t\r\n\t\tthis._length += (view.length * 2);\r\n\t\tthis.start = (this._start + view.length);\r\n\t\tthis.prevLength -= (view.length * 2);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Append a new char to the current \"Stream\"\r\n\t * @param {number} char A new char to append to current \"stream\"\r\n\t */\r\n\tappendChar(char)\r\n\t{\r\n\t\tif((this._start + 1) > this._stream._buffer.byteLength)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnLefSideOfComparisonJS\r\n\t\t\tif(1 > this.appendBlock)\r\n\t\t\t{\r\n\t\t\t\t// noinspection MagicNumberJS\r\n\t\t\t\tthis.appendBlock = 1000;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._stream.realloc(this._stream._buffer.byteLength + this.appendBlock);\r\n\t\t}\r\n\t\t\r\n\t\tthis._stream._view[this._start] = char;\r\n\t\t\r\n\t\tthis._length += 2;\r\n\t\tthis.start = (this._start + 1);\r\n\t\tthis.prevLength -= 2;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionNamingConventionJS\r\n\t/**\r\n\t * Append a new number to the current \"Stream\"\r\n\t * @param {number} number A new unsigned 16-bit integer to append to current \"stream\"\r\n\t */\r\n\tappendUint16(number)\r\n\t{\r\n\t\tif((this._start + 2) > this._stream._buffer.byteLength)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnLefSideOfComparisonJS\r\n\t\t\tif(2 > this.appendBlock)\r\n\t\t\t{\r\n\t\t\t\t// noinspection MagicNumberJS\r\n\t\t\t\tthis.appendBlock = 1000;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._stream.realloc(this._stream._buffer.byteLength + this.appendBlock);\r\n\t\t}\r\n\t\t\r\n\t\tconst value = new Uint16Array([number]);\r\n\t\tconst view = new Uint8Array(value.buffer);\r\n\t\t\r\n\t\tthis._stream._view[this._start] = view[1];\r\n\t\tthis._stream._view[this._start + 1] = view[0];\r\n\t\t\r\n\t\tthis._length += 4;\r\n\t\tthis.start = (this._start + 2);\r\n\t\tthis.prevLength -= 4;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionNamingConventionJS\r\n\t/**\r\n\t * Append a new number to the current \"Stream\"\r\n\t * @param {number} number A new unsigned 24-bit integer to append to current \"stream\"\r\n\t */\r\n\tappendUint24(number)\r\n\t{\r\n\t\tif((this._start + 3) > this._stream._buffer.byteLength)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnLefSideOfComparisonJS\r\n\t\t\tif(3 > this.appendBlock)\r\n\t\t\t{\r\n\t\t\t\t// noinspection MagicNumberJS\r\n\t\t\t\tthis.appendBlock = 1000;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._stream.realloc(this._stream._buffer.byteLength + this.appendBlock);\r\n\t\t}\r\n\t\t\r\n\t\tconst value = new Uint32Array([number]);\r\n\t\tconst view = new Uint8Array(value.buffer);\r\n\t\t\r\n\t\tthis._stream._view[this._start] = view[2];\r\n\t\tthis._stream._view[this._start + 1] = view[1];\r\n\t\tthis._stream._view[this._start + 2] = view[0];\r\n\t\t\r\n\t\tthis._length += 6;\r\n\t\tthis.start = (this._start + 3);\r\n\t\tthis.prevLength -= 6;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionNamingConventionJS\r\n\t/**\r\n\t * Append a new number to the current \"Stream\"\r\n\t * @param {number} number A new unsigned 32-bit integer to append to current \"stream\"\r\n\t */\r\n\tappendUint32(number)\r\n\t{\r\n\t\tif((this._start + 4) > this._stream._buffer.byteLength)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnLefSideOfComparisonJS\r\n\t\t\tif(4 > this.appendBlock)\r\n\t\t\t{\r\n\t\t\t\t// noinspection MagicNumberJS\r\n\t\t\t\tthis.appendBlock = 1000;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._stream.realloc(this._stream._buffer.byteLength + this.appendBlock);\r\n\t\t}\r\n\t\t\r\n\t\tconst value = new Uint32Array([number]);\r\n\t\tconst view = new Uint8Array(value.buffer);\r\n\t\t\r\n\t\tthis._stream._view[this._start] = view[3];\r\n\t\tthis._stream._view[this._start + 1] = view[2];\r\n\t\tthis._stream._view[this._start + 2] = view[1];\r\n\t\tthis._stream._view[this._start + 3] = view[0];\r\n\t\t\r\n\t\tthis._length += 8;\r\n\t\tthis.start = (this._start + 4);\r\n\t\tthis.prevLength -= 8;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Get a block of data\r\n\t * @param {number} size Size of the data block to get\r\n\t * @param {boolean} [changeLength=true] Should we change \"length\" and \"start\" value after reading the data block\r\n\t * @returns {Array}\r\n\t */\r\n\tgetBlock(size, changeLength = true)\r\n\t{\r\n\t\t//region Check input parameters\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif(this._length <= 0)\r\n\t\t\treturn [];\r\n\t\t\r\n\t\tif(this._length < size)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tsize = this._length;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Initial variables\r\n\t\tlet result;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Getting result depends on \"backward\" flag\r\n\t\tif(this.backward)\r\n\t\t{\r\n\t\t\tconst buffer = this._stream._buffer.slice(this._length - size, this._length);\r\n\t\t\tconst view = new Uint8Array(buffer);\r\n\t\t\t\r\n\t\t\tresult = new Array(size);\r\n\t\t\t\r\n\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\tfor(let i = 0; i < size; i++)\r\n\t\t\t\tresult[size - 1 - i] = view[i];\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tconst buffer = this._stream._buffer.slice(this._start, this._start + size);\r\n\t\t\t\r\n\t\t\t// noinspection NestedFunctionCallJS\r\n\t\t\tresult = Array.from(new Uint8Array(buffer));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Change \"length\" value if needed\r\n\t\tif(changeLength)\r\n\t\t{\r\n\t\t\t// noinspection ConditionalExpressionJS\r\n\t\t\tthis.start += ((this.backward) ? ((-1) * size) : size);\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleReturnPointsJS, FunctionNamingConventionJS\r\n\t/**\r\n\t * Get 2-byte unsigned integer value\r\n\t * @param {boolean} [changeLength=true] Should we change \"length\" and \"start\" value after reading the data block\r\n\t * @returns {number}\r\n\t */\r\n\tgetUint16(changeLength = true)\r\n\t{\r\n\t\tconst block = this.getBlock(2, changeLength);\r\n\t\t\r\n\t\t//region Check posibility for convertion\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif(block.length < 2)\r\n\t\t\treturn 0;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Convert byte array to \"Uint32Array\" value\r\n\t\tconst value = new Uint16Array(1);\r\n\t\tconst view = new Uint8Array(value.buffer);\r\n\t\t\r\n\t\tview[0] = block[1];\r\n\t\tview[1] = block[0];\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn value[0];\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleReturnPointsJS, FunctionNamingConventionJS\r\n\t/**\r\n\t * Get 3-byte unsigned integer value\r\n\t * @param {boolean} [changeLength=true] Should we change \"length\" and \"start\" value after reading the data block\r\n\t * @returns {number}\r\n\t */\r\n\tgetUint24(changeLength = true)\r\n\t{\r\n\t\tconst block = this.getBlock(3, changeLength);\r\n\t\t\r\n\t\t//region Check posibility for convertion\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif(block.length < 3)\r\n\t\t\treturn 0;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Convert byte array to \"Uint32Array\" value\r\n\t\tconst value = new Uint32Array(1);\r\n\t\tconst view = new Uint8Array(value.buffer);\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tfor(let i = 3; i >= 1; i--)\r\n\t\t\tview[3 - i] = block[i - 1];\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn value[0];\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleReturnPointsJS, FunctionNamingConventionJS\r\n\t/**\r\n\t * Get 4-byte unsigned integer value\r\n\t * @param {boolean} [changeLength=true] Should we change \"length\" and \"start\" value after reading the data block\r\n\t * @returns {number}\r\n\t */\r\n\tgetUint32(changeLength = true)\r\n\t{\r\n\t\tconst block = this.getBlock(4, changeLength);\r\n\t\t\r\n\t\t//region Check posibility for convertion\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif(block.length < 4)\r\n\t\t\treturn 0;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Convert byte array to \"Uint32Array\" value\r\n\t\tconst value = new Uint32Array(1);\r\n\t\tconst view = new Uint8Array(value.buffer);\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tfor(let i = 3; i >= 0; i--)\r\n\t\t\tview[3 - i] = block[i];\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn value[0];\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleLoopsJS, FunctionWithMultipleReturnPointsJS, OverlyComplexFunctionJS, FunctionTooLongJS\r\n/**\r\n * Get parsed values from \"byte map\"\r\n * @param {ByteStream} stream Stream to parse data from\r\n * @param {Object} map Object with information how to parse \"byte map\"\r\n * @param {number} elements Number of elements in parsing byte map\r\n * @param {?number} [start=null] Start position to parse from\r\n * @param {?number} [length=null] Length of byte block to parse from\r\n * @returns {*}\r\n */\r\nexport function parseByteMap(stream, map, elements, start = null, length = null)\r\n{\r\n\t/*\r\n\t Map example:\r\n\t \r\n\t let map = [\r\n\t {\r\n\t type: \"string\",\r\n\t name: \"type\",\r\n\t minlength: 1,\r\n\t maxlength: 1,\r\n\t func: function(array)\r\n\t {\r\n\t let result = {\r\n\t status: (-1),\r\n\t length: 1\r\n\t };\r\n\t \r\n\t switch(array[0])\r\n\t {\r\n\t case 0x6E: // \"n\"\r\n\t result.value = \"n\";\r\n\t break;\r\n\t case 0x66: // \"f\"\r\n\t result.value = \"f\";\r\n\t break;\r\n\t default:\r\n\t return result;\r\n\t }\r\n\t \r\n\t result.status = 1;\r\n\t \r\n\t return result;\r\n\t }\r\n\t },\r\n\t {\r\n\t type: \"check\",\r\n\t minlength: 1,\r\n\t maxlength: 2,\r\n\t func: function(array)\r\n\t {\r\n\t let position = (-1);\r\n\t \r\n\t if(array[0] == 0x0A)\r\n\t position = 1;\r\n\t if(array[1] == 0x0A)\r\n\t position = 2;\r\n\t \r\n\t return {\r\n\t status: (position > 0) ? 1 : (-1),\r\n\t length: position\r\n\t };\r\n\t }\r\n\t }\r\n\t ];\r\n\t */\r\n\t\r\n\t//region Initial variables\r\n\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\tif(start === null)\r\n\t{\r\n\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\tstart = 0;\r\n\t}\r\n\t\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tif(start > (stream.buffer.byteLength - 1))\r\n\t\treturn false;\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\tif(length === null)\r\n\t{\r\n\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\tlength = stream.buffer.byteLength - start;\r\n\t}\r\n\t\r\n\tif(length > (stream.buffer.byteLength - start))\r\n\t{\r\n\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\tlength = stream.buffer.byteLength - start;\r\n\t}\r\n\t\r\n\tlet dataView;\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, EqualityComparisonWithCoercionJS, NonBlockStatementBodyJS\r\n\tif((start == 0) && (length == stream.buffer.byteLength))\r\n\t\tdataView = stream.view;\r\n\telse\r\n\t\tdataView = new Uint8Array(stream.buffer, start, length);\r\n\t\r\n\tconst resultArray = new Array(elements);\r\n\tlet elementsCount = 0;\r\n\t\r\n\tlet count = 0;\r\n\tconst mapLength = map.length;\r\n\t//endregion\r\n\t\r\n\t//region Parse all byte, structure by structure\r\n\twhile(count < length)\r\n\t{\r\n\t\tlet structureLength = 0;\r\n\t\t\r\n\t\tresultArray[elementsCount] = {};\r\n\t\t\r\n\t\tfor(let i = 0; i < mapLength; i++)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, JSUnresolvedVariable, EqualityComparisonWithCoercionJS\r\n\t\t\tif(map[i].maxlength == 0)\r\n\t\t\t{\r\n\t\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\t\tif(\"defaultValue\" in map[i])\r\n\t\t\t\t\t(resultArray[elementsCount])[map[i].name] = map[i].defaultValue;\r\n\t\t\t\t\r\n\t\t\t\t// noinspection ContinueStatementJS\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// noinspection JSUnresolvedVariable\r\n\t\t\tconst array = new Array(map[i].maxlength);\r\n\t\t\t\r\n\t\t\t// noinspection JSUnresolvedVariable\r\n\t\t\tfor(let j = 0; j < map[i].maxlength; j++)\r\n\t\t\t{\r\n\t\t\t\t// noinspection IncrementDecrementResultUsedJS\r\n\t\t\t\tarray[j] = dataView[count++];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// noinspection JSUnresolvedVariable\r\n\t\t\tconst result = (map[i].func)(array);\r\n\t\t\t// noinspection EqualityComparisonWithCoercionJS, NonBlockStatementBodyJS\r\n\t\t\tif(result.status == (-1))\r\n\t\t\t\treturn result;\r\n\t\t\t\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, EqualityComparisonWithCoercionJS, NonBlockStatementBodyJS\r\n\t\t\tif(map[i].type != \"check\")\r\n\t\t\t\t(resultArray[elementsCount])[map[i].name] = result.value;\r\n\t\t\t\r\n\t\t\t// noinspection JSUnresolvedVariable\r\n\t\t\tcount -= (map[i].maxlength - result.length);\r\n\t\t\tstructureLength += result.length;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection IncrementDecrementResultUsedJS\r\n\t\t(resultArray[elementsCount++]).structureLength = structureLength;\r\n\t}\r\n\t//endregion\r\n\t\r\n\treturn resultArray;\r\n}\r\n//**************************************************************************************\r\n//region \"Bits-to-string\" array\r\nconst bitsToStringArray = [\r\n\t\"00000000\", \"00000001\", \"00000010\",\r\n\t\"00000011\", \"00000100\", \"00000101\",\r\n\t\"00000110\", \"00000111\", \"00001000\",\r\n\t\"00001001\", \"00001010\", \"00001011\",\r\n\t\"00001100\", \"00001101\", \"00001110\",\r\n\t\"00001111\", \"00010000\", \"00010001\",\r\n\t\"00010010\", \"00010011\", \"00010100\",\r\n\t\"00010101\", \"00010110\", \"00010111\",\r\n\t\"00011000\", \"00011001\", \"00011010\",\r\n\t\"00011011\", \"00011100\", \"00011101\",\r\n\t\"00011110\", \"00011111\", \"00100000\",\r\n\t\"00100001\", \"00100010\", \"00100011\",\r\n\t\"00100100\", \"00100101\", \"00100110\",\r\n\t\"00100111\", \"00101000\", \"00101001\",\r\n\t\"00101010\", \"00101011\", \"00101100\",\r\n\t\"00101101\", \"00101110\", \"00101111\",\r\n\t\"00110000\", \"00110001\", \"00110010\",\r\n\t\"00110011\", \"00110100\", \"00110101\",\r\n\t\"00110110\", \"00110111\", \"00111000\",\r\n\t\"00111001\", \"00111010\", \"00111011\",\r\n\t\"00111100\", \"00111101\", \"00111110\",\r\n\t\"00111111\", \"01000000\", \"01000001\",\r\n\t\"01000010\", \"01000011\", \"01000100\",\r\n\t\"01000101\", \"01000110\", \"01000111\",\r\n\t\"01001000\", \"01001001\", \"01001010\",\r\n\t\"01001011\", \"01001100\", \"01001101\",\r\n\t\"01001110\", \"01001111\", \"01010000\",\r\n\t\"01010001\", \"01010010\", \"01010011\",\r\n\t\"01010100\", \"01010101\", \"01010110\",\r\n\t\"01010111\", \"01011000\", \"01011001\",\r\n\t\"01011010\", \"01011011\", \"01011100\",\r\n\t\"01011101\", \"01011110\", \"01011111\",\r\n\t\"01100000\", \"01100001\", \"01100010\",\r\n\t\"01100011\", \"01100100\", \"01100101\",\r\n\t\"01100110\", \"01100111\", \"01101000\",\r\n\t\"01101001\", \"01101010\", \"01101011\",\r\n\t\"01101100\", \"01101101\", \"01101110\",\r\n\t\"01101111\", \"01110000\", \"01110001\",\r\n\t\"01110010\", \"01110011\", \"01110100\",\r\n\t\"01110101\", \"01110110\", \"01110111\",\r\n\t\"01111000\", \"01111001\", \"01111010\",\r\n\t\"01111011\", \"01111100\", \"01111101\",\r\n\t\"01111110\", \"01111111\", \"10000000\",\r\n\t\"10000001\", \"10000010\", \"10000011\",\r\n\t\"10000100\", \"10000101\", \"10000110\",\r\n\t\"10000111\", \"10001000\", \"10001001\",\r\n\t\"10001010\", \"10001011\", \"10001100\",\r\n\t\"10001101\", \"10001110\", \"10001111\",\r\n\t\"10010000\", \"10010001\", \"10010010\",\r\n\t\"10010011\", \"10010100\", \"10010101\",\r\n\t\"10010110\", \"10010111\", \"10011000\",\r\n\t\"10011001\", \"10011010\", \"10011011\",\r\n\t\"10011100\", \"10011101\", \"10011110\",\r\n\t\"10011111\", \"10100000\", \"10100001\",\r\n\t\"10100010\", \"10100011\", \"10100100\",\r\n\t\"10100101\", \"10100110\", \"10100111\",\r\n\t\"10101000\", \"10101001\", \"10101010\",\r\n\t\"10101011\", \"10101100\", \"10101101\",\r\n\t\"10101110\", \"10101111\", \"10110000\",\r\n\t\"10110001\", \"10110010\", \"10110011\",\r\n\t\"10110100\", \"10110101\", \"10110110\",\r\n\t\"10110111\", \"10111000\", \"10111001\",\r\n\t\"10111010\", \"10111011\", \"10111100\",\r\n\t\"10111101\", \"10111110\", \"10111111\",\r\n\t\"11000000\", \"11000001\", \"11000010\",\r\n\t\"11000011\", \"11000100\", \"11000101\",\r\n\t\"11000110\", \"11000111\", \"11001000\",\r\n\t\"11001001\", \"11001010\", \"11001011\",\r\n\t\"11001100\", \"11001101\", \"11001110\",\r\n\t\"11001111\", \"11010000\", \"11010001\",\r\n\t\"11010010\", \"11010011\", \"11010100\",\r\n\t\"11010101\", \"11010110\", \"11010111\",\r\n\t\"11011000\", \"11011001\", \"11011010\",\r\n\t\"11011011\", \"11011100\", \"11011101\",\r\n\t\"11011110\", \"11011111\", \"11100000\",\r\n\t\"11100001\", \"11100010\", \"11100011\",\r\n\t\"11100100\", \"11100101\", \"11100110\",\r\n\t\"11100111\", \"11101000\", \"11101001\",\r\n\t\"11101010\", \"11101011\", \"11101100\",\r\n\t\"11101101\", \"11101110\", \"11101111\",\r\n\t\"11110000\", \"11110001\", \"11110010\",\r\n\t\"11110011\", \"11110100\", \"11110101\",\r\n\t\"11110110\", \"11110111\", \"11111000\",\r\n\t\"11111001\", \"11111010\", \"11111011\",\r\n\t\"11111100\", \"11111101\", \"11111110\",\r\n\t\"11111111\"\r\n];\r\n//endregion\r\n//**************************************************************************************\r\nexport class BitStream\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for \"BitStream\" class\r\n\t * @param {{[byteStream]: ByteStream, [view]: Uint8Array, [buffer]: ArrayBuffer, [string]: string, [bitsCount]: number}} parameters\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tthis.buffer = new ArrayBuffer(0);\r\n\t\tthis.view = new Uint8Array(this.buffer);\r\n\t\t\r\n\t\tthis.bitsCount = 0; // Number of bits stored in current \"BitStream\"\r\n\t\t\r\n\t\tfor(const key of Object.keys(parameters))\r\n\t\t{\r\n\t\t\tswitch(key)\r\n\t\t\t{\r\n\t\t\t\tcase \"byteStream\":\r\n\t\t\t\t\tthis.fromByteStream(parameters.byteStream);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"view\":\r\n\t\t\t\t\tthis.fromUint8Array(parameters.view);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"buffer\":\r\n\t\t\t\t\tthis.fromArrayBuffer(parameters.buffer);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\t\tthis.fromString(parameters.string);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"uint32\":\r\n\t\t\t\t\tthis.fromUint32(parameters.uint32);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"bitsCount\":\r\n\t\t\t\t\tthis.bitsCount = parameters.bitsCount;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Clear existing stream\r\n\t */\r\n\tclear()\r\n\t{\r\n\t\tthis.buffer = new ArrayBuffer(0);\r\n\t\tthis.view = new Uint8Array(this.buffer);\r\n\t\t\r\n\t\tthis.bitsCount = 0;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Initialize \"BitStream\" by data from existing \"ByteStream\"\r\n\t * @param {ByteStream} stream\r\n\t */\r\n\tfromByteStream(stream)\r\n\t{\r\n\t\tthis.buffer = stream.buffer.slice(0);\r\n\t\tthis.view = new Uint8Array(this.buffer);\r\n\t\t\r\n\t\tthis.bitsCount = this.view.length << 3;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Initialize \"BitStream\" object from existing \"ArrayBuffer\"\r\n\t * @param {ArrayBuffer} array The ArrayBuffer to copy from\r\n\t */\r\n\tfromArrayBuffer(array)\r\n\t{\r\n\t\tthis.buffer = array.slice(0);\r\n\t\tthis.view = new Uint8Array(this.buffer);\r\n\t\t\r\n\t\tthis.bitsCount = this.view.length << 3;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionNamingConventionJS\r\n\t/**\r\n\t * Initialize \"BitStream\" object from existing \"Uint8Array\"\r\n\t * @param {Uint8Array} array The Uint8Array to copy from\r\n\t */\r\n\tfromUint8Array(array)\r\n\t{\r\n\t\tthis.buffer = new ArrayBuffer(array.length);\r\n\t\tthis.view = new Uint8Array(this.buffer);\r\n\t\t\r\n\t\tthis.view.set(array);\r\n\t\t\r\n\t\tthis.bitsCount = this.view.length << 3;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Initialize \"BitStream\" object from existing bit string\r\n\t * @param {string} string The string to initialize from\r\n\t */\r\n\tfromString(string)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tconst stringLength = string.length;\r\n\t\t\r\n\t\t// noinspection ConditionalExpressionJS\r\n\t\tthis.buffer = new ArrayBuffer((stringLength >> 3) + ((stringLength % 8) ? 1 : 0));\r\n\t\tthis.view = new Uint8Array(this.buffer);\r\n\t\t\r\n\t\tthis.bitsCount = ((stringLength >> 3) + 1) << 3; // In order to handle correct shifting\r\n\t\t\r\n\t\tlet byteIndex = 0;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Convert from \"bit string\" to bytes\r\n\t\tfor(let i = 0; i < stringLength; i++)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, EqualityComparisonWithCoercionJS, NonBlockStatementBodyJS\r\n\t\t\tif(string[i] == \"1\")\r\n\t\t\t\tthis.view[byteIndex] |= 1 << (7 - (i % 8));\r\n\t\t\t\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, EqualityComparisonWithCoercionJS, NonBlockStatementBodyJS\r\n\t\t\tif(i && (((i + 1) % 8) == 0))\r\n\t\t\t\tbyteIndex++;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Shift \"BitStream\" into correct position\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(stringLength % 8)\r\n\t\t\tthis.shiftRight(8 - (stringLength % 8));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Change \"bitsCount\"\r\n\t\tthis.bitsCount = stringLength;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Initialize \"BitStream\" object from existing uint32 number\r\n\t * @param {Number} number The string to initialize from\r\n\t */\r\n\tfromUint32(uint32)\r\n\t{\r\n\t\tthis.buffer = new ArrayBuffer(4);\r\n\t\tthis.view = new Uint8Array(this.buffer);\r\n\r\n\t\tconst value = new Uint32Array([uint32]);\r\n\t\tconst view = new Uint8Array(value.buffer);\r\n\t\t\r\n\t\tfor(let i = 3; i >= 0; i--)\r\n\t\t\tthis.view[i] = view[3 - i];\r\n\r\n\t\tthis.bitsCount = 32;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Represent \"BitStream\" object content as a string\r\n\t * @param {?number} [start=null] Start number to convert to string from\r\n\t * @param {?number} [length=null] Length of BitStream to convert to string\r\n\t * @returns {string}\r\n\t */\r\n\ttoString(start = null, length = null)\r\n\t{\r\n\t\t//region Check input parameters\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(start == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif((start >= this.view.length) || (start < 0))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(length == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.view.length - start;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif((length >= this.view.length) || (length < 0))\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = this.view.length - start;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Initial variables\r\n\t\tconst result = [];\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Convert from bytes to \"bit string\"\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tfor(let i = start; i < (start + length); i++)\r\n\t\t\tresult.push(bitsToStringArray[this.view[i]]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t// noinspection ChainedFunctionCallJS\r\n\t\treturn result.join(\"\").slice((this.view.length << 3) - this.bitsCount);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Shift entire \"BitStream\" value right to number of bits\r\n\t * @param {number} shift Number of bits to shift value\r\n\t * @param {boolean} [needShrink=true] Need to shrink result or not\r\n\t */\r\n\tshiftRight(shift, needShrink = true)\r\n\t{\r\n\t\t//region Check parameters\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, EqualityComparisonWithCoercionJS, NonBlockStatementBodyJS\r\n\t\tif(this.view.length == 0)\r\n\t\t\treturn;\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif((shift < 0) || (shift > 8))\r\n\t\t\tthrow new Error(\"The \\\"shift\\\" parameter must be in range 0-8\");\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(shift > this.bitsCount)\r\n\t\t\tthrow new Error(\"The \\\"shift\\\" parameter can not be bigger than \\\"this.bitsCount\\\"\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Initial variables\r\n\t\t// noinspection MagicNumberJS\r\n\t\tconst shiftMask = 0xFF >> (8 - shift);\r\n\t\tthis.view[this.view.length - 1] >>= shift;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Shift value\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tfor(let i = (this.view.length - 2); i >= 0; i--)\r\n\t\t{\r\n\t\t\t// noinspection NonShortCircuitBooleanExpressionJS\r\n\t\t\tthis.view[i + 1] |= (this.view[i] & shiftMask) << (8 - shift);\r\n\t\t\tthis.view[i] >>= shift;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Decrease number of bits stored into value\r\n\t\tthis.bitsCount -= shift;\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, EqualityComparisonWithCoercionJS, NonBlockStatementBodyJS\r\n\t\tif(this.bitsCount == 0)\r\n\t\t\tthis.clear();\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Change stream size if needed\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(needShrink)\r\n\t\t\tthis.shrink();\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Shift entire \"BitStream\" value left to number of bits\r\n\t * @param {number} shift Number of bits to shift value\r\n\t */\r\n\tshiftLeft(shift)\r\n\t{\r\n\t\t/*\r\n\t\t NOTE: We do not really shift value because of internal structure of \"BitStream\":\r\n\t\t all bytes inside \"BitStream\" are aligned to right position. So, even if we will\r\n\t\t really shift value to left after that we will need again shift it right to the\r\n\t\t same number of bits. Thus all that we do here is hiding of left bits and descresing\r\n\t\t the \"bitsCount\" number.\r\n\t\t */\r\n\t\t\r\n\t\t//region Check parameters\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, EqualityComparisonWithCoercionJS, NonBlockStatementBodyJS\r\n\t\tif(this.view.length == 0)\r\n\t\t\treturn;\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif((shift < 0) || (shift > 8))\r\n\t\t\tthrow new Error(\"The \\\"shift\\\" parameter must be in range 0-8\");\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(shift > this.bitsCount)\r\n\t\t\tthrow new Error(\"The \\\"shift\\\" parameter can not be bigger than \\\"this.bitsCount\\\"\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Remove shifted bits\r\n\t\t// noinspection MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst bitsOffset = this.bitsCount & 0x07;\r\n\t\tif(bitsOffset > shift)\r\n\t\t{\r\n\t\t\t// noinspection MagicNumberJS\r\n\t\t\tthis.view[0] &= 0xFF >> (bitsOffset + shift);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t//region Change size of buffer\r\n\t\t\tconst buffer = new ArrayBuffer(this.buffer.byteLength - 1);\r\n\t\t\tconst view = new Uint8Array(buffer);\r\n\t\t\t\r\n\t\t\t// noinspection NestedFunctionCallJS\r\n\t\t\tview.set(new Uint8Array(this.buffer, 1, this.buffer.byteLength - 1));\r\n\t\t\t//endregion\r\n\t\t\t\r\n\t\t\t//region Mask item with index 0\r\n\t\t\t// noinspection MagicNumberJS\r\n\t\t\tview[0] &= 0xFF >> (shift - bitsOffset);\r\n\t\t\t//endregion\r\n\t\t\t\r\n\t\t\t//region Store final array into current stream\r\n\t\t\tthis.buffer = buffer.slice(0);\r\n\t\t\tthis.view = new Uint8Array(this.buffer);\r\n\t\t\t//endregion\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Decrease number of bits stored into value\r\n\t\tthis.bitsCount -= shift;\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, EqualityComparisonWithCoercionJS, NonBlockStatementBodyJS\r\n\t\tif(this.bitsCount == 0)\r\n\t\t\tthis.clear();\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleReturnPointsJS, FunctionTooLongJS\r\n\t/**\r\n\t * Return slice of existing \"BitStream\"\r\n\t * @param {?number} [start=null] Start position of the slice (in bits)\r\n\t * @param {?number} [end=null] End position of the slice (in bits)\r\n\t * @returns {BitStream}\r\n\t */\r\n\tslice(start = null, end = null)\r\n\t{\r\n\t\t//region Make ability to pass non-value bits\r\n\t\tlet valueShift = 0;\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(this.bitsCount % 8)\r\n\t\t\tvalueShift = (8 - (this.bitsCount % 8));\r\n\t\t\r\n\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\tstart += valueShift;\r\n\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\tend += valueShift;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Initial variables\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(start == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif((start < 0) || (start > ((this.view.length << 3) - 1)))\r\n\t\t\treturn new BitStream(); //(\"Wrong start position: \" + start);\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(end == null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tend = (this.view.length << 3) - 1;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif((end < 0) || (end > ((this.view.length << 3) - 1)))\r\n\t\t\treturn new BitStream(); //(\"Wrong end position: \" + end);\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif((end - start + 1) > this.bitsCount)\r\n\t\t\treturn new BitStream(); //(\"Maximum length is \" + this.bitsCount);\r\n\t\t\r\n\t\tconst startIndex = start >> 3;\r\n\t\t// noinspection MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst startOffset = start & 0x07;\r\n\t\t\r\n\t\tconst endIndex = end >> 3;\r\n\t\t// noinspection MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst endOffset = end & 0x07;\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, ConditionalExpressionJS, EqualityComparisonWithCoercionJS\r\n\t\tconst bitsLength = ((endIndex - startIndex) == 0) ? 1 : (endIndex - startIndex + 1);\r\n\t\t\r\n\t\tconst result = new BitStream();\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Store \"primary bytes\"\r\n\t\tresult.buffer = new ArrayBuffer(bitsLength);\r\n\t\tresult.view = new Uint8Array(result.buffer);\r\n\t\tresult.bitsCount = bitsLength << 3;\r\n\t\t\r\n\t\t// noinspection NestedFunctionCallJS\r\n\t\tresult.view.set(new Uint8Array(this.buffer, startIndex, bitsLength));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Change \"start byte\"\r\n\t\t// noinspection MagicNumberJS\r\n\t\tresult.view[0] &= (0xFF >> startOffset);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Change \"end byte\"\r\n\t\t// noinspection MagicNumberJS\r\n\t\tresult.view[bitsLength] &= (0xFF << (7 - endOffset));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Shift result array to right\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(7 - endOffset)\r\n\t\t\tresult.shiftRight(7 - endOffset, false);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Set final number of bits\r\n\t\tresult.bitsCount = (end - start + 1);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Cut unnecessary bytes from result\r\n\t\tresult.shrink();\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Return copy of existing \"BitStream\"\r\n\t * @param {?number} [start=null] Start position of the copy (in bits)\r\n\t * @param {?number} [length=null] Length of the copy (in bits)\r\n\t * @returns {BitStream}\r\n\t */\r\n\tcopy(start = null, length = null)\r\n\t{\r\n\t\t//region Check input parameters\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif((start < 0) || (start > ((this.view.length << 3) - 1)))\r\n\t\t\treturn new BitStream(); //(\"Wrong start position: \" + start);\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS\r\n\t\tif(length === null)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = (this.view.length << 3) - start - 1;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(length > this.bitsCount)\r\n\t\t\treturn new BitStream(); //(\"Maximum length is \" + this.bitsCount);\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn this.slice(start, start + length - 1);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Shrink unnecessary bytes in current stream accordingly to \"bitsCount\" value\r\n\t */\r\n\tshrink()\r\n\t{\r\n\t\t// noinspection ConditionalExpressionJS\r\n\t\tconst currentLength = (this.bitsCount >> 3) + ((this.bitsCount % 8) ? 1 : 0);\r\n\t\tif(currentLength < this.buffer.byteLength)\r\n\t\t{\r\n\t\t\t//region Change size of buffer\r\n\t\t\tconst buffer = new ArrayBuffer(currentLength);\r\n\t\t\tconst view = new Uint8Array(buffer);\r\n\t\t\t\r\n\t\t\t// noinspection NestedFunctionCallJS\r\n\t\t\tview.set(new Uint8Array(this.buffer, this.buffer.byteLength - currentLength, currentLength));\r\n\t\t\t//endregion\r\n\t\t\t\r\n\t\t\t//region Store final array into current stream\r\n\t\t\tthis.buffer = buffer.slice(0);\r\n\t\t\tthis.view = new Uint8Array(this.buffer);\r\n\t\t\t//endregion\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Reverse bits order in each byte in the stream\r\n\t * Got it from here: http://graphics.stanford.edu/~seander/bithacks.html#ReverseByteWith32Bits\r\n\t */\r\n\treverseBytes()\r\n\t{\r\n\t\t//region Reverse bits order in each byte in the stream\r\n\t\tfor(let i = 0; i < this.view.length; i++)\r\n\t\t{\r\n\t\t\t// noinspection MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\t\tthis.view[i] = ((this.view[i] * 0x0802 & 0x22110) | (this.view[i] * 0x8020 & 0x88440)) * 0x10101 >> 16;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Shift \"most significant\" byte\r\n\t\tif(this.bitsCount % 8)\r\n\t\t{\r\n\t\t\t// noinspection ConditionalExpressionJS\r\n\t\t\tconst currentLength = (this.bitsCount >> 3) + ((this.bitsCount % 8) ? 1 : 0);\r\n\t\t\t// noinspection MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\t\tthis.view[this.view.length - currentLength] >>= (8 - (this.bitsCount & 0x07));\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Reverse all bits in entire \"BitStream\"\r\n\t */\r\n\treverseValue()\r\n\t{\r\n\t\tconst initialValue = this.toString();\r\n\t\tconst initialValueLength = initialValue.length;\r\n\t\t\r\n\t\tconst reversedValue = new Array(initialValueLength);\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tfor(let i = 0; i < initialValueLength; i++)\r\n\t\t\treversedValue[initialValueLength - 1 - i] = initialValue[i];\r\n\t\t\r\n\t\t// noinspection NestedFunctionCallJS\r\n\t\tthis.fromString(reversedValue.join(\"\"));\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Trying to represent entire \"BitStream\" as an unsigned integer.\r\n\t * @return {number}\r\n\t */\r\n\tgetNumberValue()\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tconst byteLength = (this.buffer.byteLength - 1);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check posibility for convertion\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif(byteLength > 3)\r\n\t\t\treturn (-1);\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, EqualityComparisonWithCoercionJS, NonBlockStatementBodyJS\r\n\t\tif(byteLength == (-1))\r\n\t\t\treturn 0;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Convert byte array to \"Uint32Array\" value\r\n\t\tconst value = new Uint32Array(1);\r\n\t\tconst view = new Uint8Array(value.buffer);\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tfor(let i = byteLength; i >= 0; i--)\r\n\t\t\tview[byteLength - i] = this.view[i];\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn value[0];\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Find any bit pattern in \"BitStream\"\r\n\t * @param {BitStream} pattern Stream having pattern value\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @param {boolean} [backward=false] Flag to search in backward order\r\n\t * @returns {number}\r\n\t */\r\n\tfindPattern(pattern, start = null, length = null, backward = false)\r\n\t{\r\n\t\t//region Convert \"BitStream\" values to \"ByteStream\"\r\n\t\tconst stringStream = new ByteStream({\r\n\t\t\tstring: this.toString()\r\n\t\t});\r\n\t\tconst stringPattern = new ByteStream({\r\n\t\t\tstring: pattern.toString()\r\n\t\t});\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn stringStream.findPattern(stringPattern, start, length, backward);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Find first position of any pattern from input array\r\n\t * @param {Array.<BitStream>} patterns Array with patterns which should be found\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @param {boolean} [backward=false] Flag to search in backward order\r\n\t * @returns {{id: number, position: number}}\r\n\t */\r\n\tfindFirstIn(patterns, start = null, length = null, backward = false)\r\n\t{\r\n\t\t//region Convert \"BitStream\" values to \"ByteStream\"\r\n\t\tconst stringStream = new ByteStream({\r\n\t\t\tstring: this.toString()\r\n\t\t});\r\n\t\t\r\n\t\tconst stringPatterns = new Array(patterns.length);\r\n\t\t\r\n\t\tfor(let i = 0; i < patterns.length; i++)\r\n\t\t{\r\n\t\t\tstringPatterns[i] = new ByteStream({\r\n\t\t\t\tstring: patterns[i].toString()\r\n\t\t\t});\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn stringStream.findFirstIn(stringPatterns, start, length, backward);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Find all positions of any pattern from input array\r\n\t * @param {Array.<BitStream>} patterns Array with patterns which should be found\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @returns {Array}\r\n\t */\r\n\tfindAllIn(patterns, start = null, length = null)\r\n\t{\r\n\t\t//region Convert \"BitStream\" values to \"ByteStream\"\r\n\t\tconst stringStream = new ByteStream({\r\n\t\t\tstring: this.toString()\r\n\t\t});\r\n\t\t\r\n\t\tconst stringPatterns = new Array(patterns.length);\r\n\t\t\r\n\t\tfor(let i = 0; i < patterns.length; i++)\r\n\t\t{\r\n\t\t\tstringPatterns[i] = new ByteStream({\r\n\t\t\t\tstring: patterns[i].toString()\r\n\t\t\t});\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn stringStream.findAllIn(stringPatterns, start, length);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Find all positions of a pattern\r\n\t * @param {BitStream} pattern Stream having pattern value\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @returns {Array|number}\r\n\t */\r\n\tfindAllPatternIn(pattern, start = null, length = null)\r\n\t{\r\n\t\t//region Convert \"BitStream\" values to \"ByteStream\" \r\n\t\tconst stringStream = new ByteStream({\r\n\t\t\tstring: this.toString()\r\n\t\t});\r\n\t\tconst stringPattern = new ByteStream({\r\n\t\t\tstring: pattern.toString()\r\n\t\t});\r\n\t\t//endregion \r\n\t\t\r\n\t\treturn stringStream.findAllPatternIn(stringPattern, start, length);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Find first position of data, not included in patterns from input array\r\n\t * @param {Array.<BitStream>} patterns Array with patterns which should be found\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @param {boolean} [backward=false] Flag to search in backward order\r\n\t * @returns {{left: {id: number, position: *}, right: {id: number, position: number}, value: ByteStream}}\r\n\t */\r\n\tfindFirstNotIn(patterns, start = null, length = null, backward = false)\r\n\t{\r\n\t\t//region Convert \"BitStream\" values to \"ByteStream\"\r\n\t\tconst stringStream = new ByteStream({\r\n\t\t\tstring: this.toString()\r\n\t\t});\r\n\t\t\r\n\t\tconst stringPatterns = new Array(patterns.length);\r\n\t\t\r\n\t\tfor(let i = 0; i < patterns.length; i++)\r\n\t\t{\r\n\t\t\tstringPatterns[i] = new ByteStream({\r\n\t\t\t\tstring: patterns[i].toString()\r\n\t\t\t});\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn stringStream.findFirstNotIn(stringPatterns, start, length, backward);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Find all positions of data, not included in patterns from input array\r\n\t * @param {Array.<BitStream>} patterns Array with patterns which should be found\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @returns {Array}\r\n\t */\r\n\tfindAllNotIn(patterns, start = null, length = null)\r\n\t{\r\n\t\t//region Convert \"BitStream\" values to \"ByteStream\"\r\n\t\tconst stringStream = new ByteStream({\r\n\t\t\tstring: this.toString()\r\n\t\t});\r\n\t\t\r\n\t\tconst stringPatterns = new Array(patterns.length);\r\n\t\t\r\n\t\tfor(let i = 0; i < patterns.length; i++)\r\n\t\t{\r\n\t\t\tstringPatterns[i] = new ByteStream({\r\n\t\t\t\tstring: patterns[i].toString()\r\n\t\t\t});\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn stringStream.findAllNotIn(stringPatterns, start, length);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Find position of a sequence of any patterns from input array\r\n\t * @param {Array.<BitStream>} patterns Array with patterns which should be found\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @param {boolean} [backward=false] Flag to search in backward order\r\n\t * @returns {{position, value}|*}\r\n\t */\r\n\tfindFirstSequence(patterns, start = null, length = null, backward = false)\r\n\t{\r\n\t\t//region Convert \"BitStream\" values to \"ByteStream\"\r\n\t\tconst stringStream = new ByteStream({\r\n\t\t\tstring: this.toString()\r\n\t\t});\r\n\t\t\r\n\t\tconst stringPatterns = new Array(patterns.length);\r\n\t\t\r\n\t\tfor(let i = 0; i < patterns.length; i++)\r\n\t\t{\r\n\t\t\tstringPatterns[i] = new ByteStream({\r\n\t\t\t\tstring: patterns[i].toString()\r\n\t\t\t});\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn stringStream.findFirstSequence(stringPatterns, start, length, backward);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Find position of a sequence of any patterns from input array\r\n\t * @param {Array.<BitStream>} patterns Array with patterns which should be found\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @returns {Array}\r\n\t */\r\n\tfindAllSequences(patterns, start, length)\r\n\t{\r\n\t\t//region Convert \"BitStream\" values to \"ByteStream\"\r\n\t\tconst stringStream = new ByteStream({\r\n\t\t\tstring: this.toString()\r\n\t\t});\r\n\t\t\r\n\t\tconst stringPatterns = new Array(patterns.length);\r\n\t\t\r\n\t\tfor(let i = 0; i < patterns.length; i++)\r\n\t\t{\r\n\t\t\tstringPatterns[i] = new ByteStream({\r\n\t\t\t\tstring: patterns[i].toString()\r\n\t\t\t});\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn stringStream.findAllSequences(stringPatterns, start, length);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Find all paired patterns in the stream\r\n\t * @param {BitStream} leftPattern Left pattern to search for\r\n\t * @param {BitStream} rightPattern Right pattern to search for\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @returns {Array}\r\n\t */\r\n\tfindPairedPatterns(leftPattern, rightPattern, start = null, length = null)\r\n\t{\r\n\t\t//region Convert \"BitStream\" values to \"ByteStream\"\r\n\t\tconst stringStream = new ByteStream({\r\n\t\t\tstring: this.toString()\r\n\t\t});\r\n\t\tconst stringLeftPattern = new ByteStream({\r\n\t\t\tstring: leftPattern.toString()\r\n\t\t});\r\n\t\tconst stringRightPattern = new ByteStream({\r\n\t\t\tstring: rightPattern.toString()\r\n\t\t});\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn stringStream.findPairedPatterns(stringLeftPattern, stringRightPattern, start, length);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleLoopsJS\r\n\t/**\r\n\t * Find all paired patterns in the stream\r\n\t * @param {Array.<BitStream>} inputLeftPatterns Array of left patterns to search for\r\n\t * @param {Array.<BitStream>} inputRightPatterns Array of right patterns to search for\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @returns {Array}\r\n\t */\r\n\tfindPairedArrays(inputLeftPatterns, inputRightPatterns, start = null, length = null)\r\n\t{\r\n\t\t//region Convert \"BitStream\" values to \"ByteStream\"\r\n\t\tconst stringStream = new ByteStream({\r\n\t\t\tstring: this.toString()\r\n\t\t});\r\n\t\t\r\n\t\tconst stringLeftPatterns = new Array(inputLeftPatterns.length);\r\n\t\t\r\n\t\tfor(let i = 0; i < inputLeftPatterns.length; i++)\r\n\t\t{\r\n\t\t\tstringLeftPatterns[i] = new ByteStream({\r\n\t\t\t\tstring: inputLeftPatterns[i].toString()\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tconst stringRightPatterns = new Array(inputRightPatterns.length);\r\n\t\t\r\n\t\tfor(let i = 0; i < inputRightPatterns.length; i++)\r\n\t\t{\r\n\t\t\tstringRightPatterns[i] = new ByteStream({\r\n\t\t\t\tstring: inputRightPatterns[i].toString()\r\n\t\t\t});\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn stringStream.findPairedArrays(stringLeftPatterns, stringRightPatterns, start, length);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Replace one pattern with other\r\n\t * @param {BitStream} searchPattern The pattern to search for\r\n\t * @param {BitStream} replacePattern The pattern to replace initial pattern\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @returns {boolean}\r\n\t */\r\n\treplacePattern(searchPattern, replacePattern, start = null, length = null)\r\n\t{\r\n\t\t//region Convert \"BitStream\" values to \"ByteStream\"\r\n\t\tconst stringStream = new ByteStream({\r\n\t\t\tstring: this.toString()\r\n\t\t});\r\n\t\tconst stringSearchPattern = new ByteStream({\r\n\t\t\tstring: searchPattern.toString()\r\n\t\t});\r\n\t\tconst stringReplacePattern = new ByteStream({\r\n\t\t\tstring: replacePattern.toString()\r\n\t\t});\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Re-initialize existing data\r\n\t\tif(stringStream.findPairedPatterns(stringSearchPattern, stringReplacePattern, start, length))\r\n\t\t{\r\n\t\t\t// noinspection NestedFunctionCallJS\r\n\t\t\tthis.fromString(stringStream.toString());\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn false;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Skip any pattern from input array\r\n\t * @param {Array.<BitStream>} patterns Array with patterns which should be ommited\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @param {boolean} [backward=false] Flag to search in backward order\r\n\t * @returns {*}\r\n\t */\r\n\tskipPatterns(patterns, start, length, backward)\r\n\t{\r\n\t\t//region Convert \"BitStream\" values to \"ByteStream\"\r\n\t\tconst stringStream = new ByteStream({\r\n\t\t\tstring: this.toString()\r\n\t\t});\r\n\t\t\r\n\t\tconst stringPatterns = new Array(patterns.length);\r\n\t\t\r\n\t\tfor(let i = 0; i < patterns.length; i++)\r\n\t\t{\r\n\t\t\tstringPatterns[i] = new ByteStream({\r\n\t\t\t\tstring: patterns[i].toString()\r\n\t\t\t});\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn stringStream.skipPatterns(stringPatterns, start, length, backward);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Skip any pattern not from input array\r\n\t * @param {Array.<BitStream>} patterns Array with patterns which should be ommited\r\n\t * @param {?number} [start=null] Start position to search from\r\n\t * @param {?number} [length=null] Length of byte block to search at\r\n\t * @param {boolean} [backward=false] Flag to search in backward order\r\n\t * @returns {number}\r\n\t */\r\n\tskipNotPatterns(patterns, start, length, backward)\r\n\t{\r\n\t\t//region Convert \"BitStream\" values to \"ByteStream\"\r\n\t\tconst stringStream = new ByteStream({\r\n\t\t\tstring: this.toString()\r\n\t\t});\r\n\t\t\r\n\t\tconst stringPatterns = new Array(patterns.length);\r\n\t\t\r\n\t\tfor(let i = 0; i < patterns.length; i++)\r\n\t\t{\r\n\t\t\tstringPatterns[i] = new ByteStream({\r\n\t\t\t\tstring: patterns[i].toString()\r\n\t\t\t});\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn stringStream.skipNotPatterns(stringPatterns, start, length, backward);\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Append a new \"BitStream\" content to the current \"BitStream\"\r\n\t * @param {BitStream} stream A new \"stream\" to append to current \"stream\"\r\n\t */\r\n\tappend(stream)\r\n\t{\r\n\t\t//region Initialize current stream with new data\r\n\t\t// noinspection NestedFunctionCallJS\r\n\t\tthis.fromString([\r\n\t\t\tthis.toString(),\r\n\t\t\tstream.toString()\r\n\t\t].join(\"\"));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\nexport class SeqBitStream\r\n{\r\n\t//**********************************************************************************\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal variables\r\n\t\tthis.stream = new BitStream();\r\n\t\t\r\n\t\tthis._start = 0;\r\n\t\tthis._length = this.stream.bitsCount;\r\n\t\t\r\n\t\tthis.backward = false;\r\n\t\t\r\n\t\tthis.appendBlock = 0;\r\n\t\t//endregion\r\n\t\t\r\n\t\tfor(const key of Object.keys(parameters))\r\n\t\t{\r\n\t\t\tswitch(key)\r\n\t\t\t{\r\n\t\t\t\tcase \"stream\":\r\n\t\t\t\tcase \"start\":\r\n\t\t\t\tcase \"length\":\r\n\t\t\t\tcase \"backward\":\r\n\t\t\t\tcase \"appendBlock\":\r\n\t\t\t\t\tthis[key] = parameters[key];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleReturnPointsJS\r\n\tset start(value)\r\n\t{\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(value > this.stream.bitsCount)\r\n\t\t\treturn;\r\n\t\t\r\n\t\t// noinspection ConditionalExpressionJS\r\n\t\tthis._length -= ((this.backward) ? (this._start - value) : (value - this._start));\r\n\t\tthis._start = value;\r\n\t\t\r\n\t\t//region Initialization of \"prev\" internal variables\r\n\t\t// noinspection JSUnusedGlobalSymbols\r\n\t\tthis.prevStart = this._start;\r\n\t\t// noinspection JSUnusedGlobalSymbols\r\n\t\tthis.prevLength = this._length;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\tget start()\r\n\t{\r\n\t\treturn this._start;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionWithMultipleReturnPointsJS\r\n\tset length(value)\r\n\t{\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(value > this.stream.bitsCount)\r\n\t\t\treturn;\r\n\t\t\r\n\t\t// noinspection JSUnusedGlobalSymbols\r\n\t\tthis.prevLength = this._length;\r\n\t\tthis._length = value;\r\n\t}\r\n\t//**********************************************************************************\r\n\tget length()\r\n\t{\r\n\t\treturn this._length;\r\n\t}\r\n\t//**********************************************************************************\r\n\tset stream(value)\r\n\t{\r\n\t\tthis._stream = value;\r\n\t\t\r\n\t\t// noinspection JSUnusedGlobalSymbols\r\n\t\tthis.prevLength = this._length;\r\n\t\tthis._length = value.bitsCount;\r\n\t\t\r\n\t\t// noinspection JSUnusedGlobalSymbols\r\n\t\tthis.prevStart = this._start;\r\n\t\t// noinspection ConditionalExpressionJS\r\n\t\tthis._start = (this.backward) ? this.length : 0;\r\n\t}\r\n\t//**********************************************************************************\r\n\tget stream()\r\n\t{\r\n\t\treturn this._stream;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Get next \"length\" bits from the stream\r\n\t * @param {number} length Number of bits to read\r\n\t * @returns {*}\r\n\t */\r\n\tgetBits(length)\r\n\t{\r\n\t\t//region Check input parameters \r\n\t\tif((this.start + length) > this.stream.bitsCount)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = (this.stream.bitsCount - this.start);\r\n\t\t}\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Initial variables \r\n\t\tlet result;\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Copy necessary length of bits\r\n\t\tif(this.backward)\r\n\t\t{\r\n\t\t\tresult = this.stream.copy(this.start - length, length);\r\n\t\t\tthis.start -= result.bitsCount;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tresult = this.stream.copy(this.start, length);\r\n\t\t\tthis.start += result.bitsCount;\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection FunctionTooLongJS\r\n\t/**\r\n\t * Get string representation for the next \"length\" bits from the stream\r\n\t * @param {number} length Number of bits to read\r\n\t * @returns {string}\r\n\t */\r\n\tgetBitsString(length)\r\n\t{\r\n\t\t//region Check input parameters\r\n\t\tif((this.start + length) > this.stream.bitsCount)\r\n\t\t{\r\n\t\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\t\tlength = (this.stream.bitsCount - this.start);\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Initial variables\r\n\t\tlet result = [];\r\n\t\t\r\n\t\tlet start;\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(this.backward)\r\n\t\t\tstart = this.start - length;\r\n\t\telse\r\n\t\t\tstart = this.start;\r\n\t\t\r\n\t\tlet end = this.start + length - 1;\r\n\t\t\r\n\t\t//region Make ability to pass non-value bits\r\n\t\tlet valueShift = 0;\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(this.stream.bitsCount % 8)\r\n\t\t\tvalueShift = (8 - (this.stream.bitsCount % 8));\r\n\t\t\r\n\t\tstart += valueShift;\r\n\t\tend += valueShift;\r\n\t\t//endregion\r\n\t\t\r\n\t\tconst startIndex = start >> 3;\r\n\t\t// noinspection MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst startOffset = start & 0x07;\r\n\t\t\r\n\t\tconst endIndex = end >> 3;\r\n\t\t// noinspection MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst endOffset = end & 0x07;\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, ConditionalExpressionJS, EqualityComparisonWithCoercionJS\r\n\t\tconst bitsLengthIndex = startIndex + (((endIndex - startIndex) == 0) ? 1 : (endIndex - startIndex + 1));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get string representation of bits\r\n\t\tfor(let i = startIndex; i < bitsLengthIndex; i++)\r\n\t\t{\r\n\t\t\tlet value = bitsToStringArray[this.stream.view[i]];\r\n\t\t\t\r\n\t\t\t// noinspection EqualityComparisonWithCoercionJS, NonBlockStatementBodyJS\r\n\t\t\tif(i == startIndex)\r\n\t\t\t\tvalue = value.slice(startOffset);\r\n\t\t\t\r\n\t\t\t// noinspection EqualityComparisonWithCoercionJS, NonBlockStatementBodyJS\r\n\t\t\tif(i == (bitsLengthIndex - 1))\r\n\t\t\t\tvalue = value.slice(0, endOffset - 7 + value.length);\r\n\t\t\t\r\n\t\t\tresult.push(value);\r\n\t\t}\r\n\t\t\r\n\t\tresult = result.join(\"\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Change internal values\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(this.backward)\r\n\t\t\tthis.start -= result.length;\r\n\t\telse\r\n\t\t\tthis.start += result.length;\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols, FunctionWithMultipleLoopsJS, FunctionWithMultipleReturnPointsJS\r\n\t/**\r\n\t * Get number value representation of the next \"length\" bits from the stream, preliminary reversed\r\n\t * @param {number} length Number of bits to read\r\n\t * @returns {*}\r\n\t */\r\n\tgetBitsReversedValue(length)\r\n\t{\r\n\t\t//region Initial variables \r\n\t\tconst initialValue = this.getBitsString(length);\r\n\t\tconst initialValueLength = initialValue.length;\r\n\t\t\r\n\t\tlet byteIndex;\r\n\t\t\r\n\t\tconst initialOffset = 8 - (initialValueLength % 8);\r\n\t\t\r\n\t\tconst reversedValue = new Array(initialValueLength);\r\n\t\t\r\n\t\tconst value = new Uint32Array(1);\r\n\t\tconst valueView = new Uint8Array(value.buffer, 0, 4);\r\n\t\t\r\n\t\tlet i;\r\n\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, MagicNumberJS, NonBlockStatementBodyJS\r\n\t\tif(initialValueLength > 32)\r\n\t\t\treturn (-1);\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, MagicNumberJS, EqualityComparisonWithCoercionJS, NonBlockStatementBodyJS\r\n\t\tif(length == 32)\r\n\t\t\tbyteIndex = 3;\r\n\t\telse\r\n\t\t\tbyteIndex = ((initialValueLength - 1) >> 3);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Reverse value \r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tfor(i = 0; i < initialValueLength; i++)\r\n\t\t\treversedValue[initialValueLength - 1 - i] = initialValue[i];\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Convert byte array to \"Uint32Array\" value \r\n\t\tfor(i = initialOffset; i < (initialOffset + initialValueLength); i++)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, EqualityComparisonWithCoercionJS\r\n\t\t\tif(reversedValue[i - initialOffset] == \"1\")\r\n\t\t\t{\r\n\t\t\t\t// noinspection MagicNumberJS\r\n\t\t\t\tvalueView[byteIndex] |= 0x01 << (7 - (i % 8));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConstantOnLeftSideOfComparisonJS, EqualityComparisonWithCoercionJS, NonBlockStatementBodyJS\r\n\t\t\tif(i && (((i + 1) % 8) == 0))\r\n\t\t\t\tbyteIndex--;\r\n\t\t}\r\n\t\t//endregion \r\n\t\t\r\n\t\treturn value[0];\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Represent remaining bits in \"BitStream\" as a string\r\n\t * @return {string}\r\n\t */\r\n\ttoString()\r\n\t{\r\n\t\tconst streamToDisplay = this.stream.copy(this.start, this.length);\r\n\t\treturn streamToDisplay.toString();\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"],"file":"bytestream.js"}